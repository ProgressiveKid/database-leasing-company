//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WindowsFormsApp1
{
    /// <summary>
    /// Represents a strongly typed in-memory cache of data.
    /// </summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BabyConnectionDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BabyConnectionDataSet : global::System.Data.DataSet
    {
        /// <summary>
        /// Defines the tableАссортимент
        /// </summary>
        private АссортиментDataTable tableАссортимент;

        /// <summary>
        /// Defines the tableЗаказ
        /// </summary>
        private ЗаказDataTable tableЗаказ;

        /// <summary>
        /// Defines the tableСотрудники
        /// </summary>
        private СотрудникиDataTable tableСотрудники;

        /// <summary>
        /// Defines the tableФилиалы
        /// </summary>
        private ФилиалыDataTable tableФилиалы;

        /// <summary>
        /// Defines the relationФилиалыАссортимент
        /// </summary>
        private global::System.Data.DataRelation relationФилиалыАссортимент;

        /// <summary>
        /// Defines the relationАссортиментЗаказ
        /// </summary>
        private global::System.Data.DataRelation relationАссортиментЗаказ;

        /// <summary>
        /// Defines the relationФилиалыСотрудники
        /// </summary>
        private global::System.Data.DataRelation relationФилиалыСотрудники;

        /// <summary>
        /// Defines the _schemaSerializationMode
        /// </summary>
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

        /// <summary>
        /// Initializes a new instance of the <see cref="BabyConnectionDataSet"/> class.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public BabyConnectionDataSet()
        {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BabyConnectionDataSet"/> class.
        /// </summary>
        /// <param name="info">The info<see cref="global::System.Runtime.Serialization.SerializationInfo"/></param>
        /// <param name="context">The context<see cref="global::System.Runtime.Serialization.StreamingContext"/></param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected BabyConnectionDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context, false)
        {
            if ((this.IsBinarySerialized(info, context) == true))
            {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Ассортимент"] != null))
                {
                    base.Tables.Add(new АссортиментDataTable(ds.Tables["Ассортимент"]));
                }
                if ((ds.Tables["Заказ"] != null))
                {
                    base.Tables.Add(new ЗаказDataTable(ds.Tables["Заказ"]));
                }
                if ((ds.Tables["Сотрудники"] != null))
                {
                    base.Tables.Add(new СотрудникиDataTable(ds.Tables["Сотрудники"]));
                }
                if ((ds.Tables["Филиалы"] != null))
                {
                    base.Tables.Add(new ФилиалыDataTable(ds.Tables["Филиалы"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }

        /// <summary>
        /// Gets the Ассортимент
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public АссортиментDataTable Ассортимент
        {
            get
            {
                return this.tableАссортимент;
            }
        }

        /// <summary>
        /// Gets the Заказ
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ЗаказDataTable Заказ
        {
            get
            {
                return this.tableЗаказ;
            }
        }

        /// <summary>
        /// Gets the Сотрудники
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public СотрудникиDataTable Сотрудники
        {
            get
            {
                return this.tableСотрудники;
            }
        }

        /// <summary>
        /// Gets the Филиалы
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ФилиалыDataTable Филиалы
        {
            get
            {
                return this.tableФилиалы;
            }
        }

        /// <summary>
        /// Gets or sets the SchemaSerializationMode
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return this._schemaSerializationMode;
            }
            set
            {
                this._schemaSerializationMode = value;
            }
        }

        /// <summary>
        /// Gets the Tables
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }

        /// <summary>
        /// Gets the Relations
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }

        /// <summary>
        /// The InitializeDerivedDataSet
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet()
        {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        /// <summary>
        /// The Clone
        /// </summary>
        /// <returns>The <see cref="global::System.Data.DataSet"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone()
        {
            BabyConnectionDataSet cln = ((BabyConnectionDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }

        /// <summary>
        /// The ShouldSerializeTables
        /// </summary>
        /// <returns>The <see cref="bool"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }

        /// <summary>
        /// The ShouldSerializeRelations
        /// </summary>
        /// <returns>The <see cref="bool"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }

        /// <summary>
        /// The ReadXmlSerializable
        /// </summary>
        /// <param name="reader">The reader<see cref="global::System.Xml.XmlReader"/></param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
        {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Ассортимент"] != null))
                {
                    base.Tables.Add(new АссортиментDataTable(ds.Tables["Ассортимент"]));
                }
                if ((ds.Tables["Заказ"] != null))
                {
                    base.Tables.Add(new ЗаказDataTable(ds.Tables["Заказ"]));
                }
                if ((ds.Tables["Сотрудники"] != null))
                {
                    base.Tables.Add(new СотрудникиDataTable(ds.Tables["Сотрудники"]));
                }
                if ((ds.Tables["Филиалы"] != null))
                {
                    base.Tables.Add(new ФилиалыDataTable(ds.Tables["Филиалы"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXml(reader);
                this.InitVars();
            }
        }

        /// <summary>
        /// The GetSchemaSerializable
        /// </summary>
        /// <returns>The <see cref="global::System.Xml.Schema.XmlSchema"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }

        /// <summary>
        /// The InitVars
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars()
        {
            this.InitVars(true);
        }

        /// <summary>
        /// The InitVars
        /// </summary>
        /// <param name="initTable">The initTable<see cref="bool"/></param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable)
        {
            this.tableАссортимент = ((АссортиментDataTable)(base.Tables["Ассортимент"]));
            if ((initTable == true))
            {
                if ((this.tableАссортимент != null))
                {
                    this.tableАссортимент.InitVars();
                }
            }
            this.tableЗаказ = ((ЗаказDataTable)(base.Tables["Заказ"]));
            if ((initTable == true))
            {
                if ((this.tableЗаказ != null))
                {
                    this.tableЗаказ.InitVars();
                }
            }
            this.tableСотрудники = ((СотрудникиDataTable)(base.Tables["Сотрудники"]));
            if ((initTable == true))
            {
                if ((this.tableСотрудники != null))
                {
                    this.tableСотрудники.InitVars();
                }
            }
            this.tableФилиалы = ((ФилиалыDataTable)(base.Tables["Филиалы"]));
            if ((initTable == true))
            {
                if ((this.tableФилиалы != null))
                {
                    this.tableФилиалы.InitVars();
                }
            }
            this.relationФилиалыАссортимент = this.Relations["ФилиалыАссортимент"];
            this.relationАссортиментЗаказ = this.Relations["АссортиментЗаказ"];
            this.relationФилиалыСотрудники = this.Relations["ФилиалыСотрудники"];
        }

        /// <summary>
        /// The InitClass
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass()
        {
            this.DataSetName = "BabyConnectionDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BabyConnectionDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableАссортимент = new АссортиментDataTable();
            base.Tables.Add(this.tableАссортимент);
            this.tableЗаказ = new ЗаказDataTable();
            base.Tables.Add(this.tableЗаказ);
            this.tableСотрудники = new СотрудникиDataTable();
            base.Tables.Add(this.tableСотрудники);
            this.tableФилиалы = new ФилиалыDataTable();
            base.Tables.Add(this.tableФилиалы);
            this.relationФилиалыАссортимент = new global::System.Data.DataRelation("ФилиалыАссортимент", new global::System.Data.DataColumn[] {
                        this.tableФилиалы.ФилиалColumn}, new global::System.Data.DataColumn[] {
                        this.tableАссортимент.ПринадлежностьColumn}, false);
            this.Relations.Add(this.relationФилиалыАссортимент);
            this.relationАссортиментЗаказ = new global::System.Data.DataRelation("АссортиментЗаказ", new global::System.Data.DataColumn[] {
                        this.tableАссортимент.Код_товараColumn}, new global::System.Data.DataColumn[] {
                        this.tableЗаказ.Код_товараColumn}, false);
            this.Relations.Add(this.relationАссортиментЗаказ);
            this.relationФилиалыСотрудники = new global::System.Data.DataRelation("ФилиалыСотрудники", new global::System.Data.DataColumn[] {
                        this.tableФилиалы.ФилиалColumn}, new global::System.Data.DataColumn[] {
                        this.tableСотрудники.ФилиалColumn}, false);
            this.Relations.Add(this.relationФилиалыСотрудники);
        }

        /// <summary>
        /// The ShouldSerializeАссортимент
        /// </summary>
        /// <returns>The <see cref="bool"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeАссортимент()
        {
            return false;
        }

        /// <summary>
        /// The ShouldSerializeЗаказ
        /// </summary>
        /// <returns>The <see cref="bool"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeЗаказ()
        {
            return false;
        }

        /// <summary>
        /// The ShouldSerializeСотрудники
        /// </summary>
        /// <returns>The <see cref="bool"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeСотрудники()
        {
            return false;
        }

        /// <summary>
        /// The ShouldSerializeФилиалы
        /// </summary>
        /// <returns>The <see cref="bool"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeФилиалы()
        {
            return false;
        }

        /// <summary>
        /// The SchemaChanged
        /// </summary>
        /// <param name="sender">The sender<see cref="object"/></param>
        /// <param name="e">The e<see cref="global::System.ComponentModel.CollectionChangeEventArgs"/></param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
        {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
            {
                this.InitVars();
            }
        }

        /// <summary>
        /// The GetTypedDataSetSchema
        /// </summary>
        /// <param name="xs">The xs<see cref="global::System.Xml.Schema.XmlSchemaSet"/></param>
        /// <returns>The <see cref="global::System.Xml.Schema.XmlSchemaComplexType"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            BabyConnectionDataSet ds = new BabyConnectionDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }

        /// <summary>
        /// The АссортиментRowChangeEventHandler
        /// </summary>
        /// <param name="sender">The sender<see cref="object"/></param>
        /// <param name="e">The e<see cref="АссортиментRowChangeEvent"/></param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void АссортиментRowChangeEventHandler(object sender, АссортиментRowChangeEvent e);

        /// <summary>
        /// The ЗаказRowChangeEventHandler
        /// </summary>
        /// <param name="sender">The sender<see cref="object"/></param>
        /// <param name="e">The e<see cref="ЗаказRowChangeEvent"/></param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void ЗаказRowChangeEventHandler(object sender, ЗаказRowChangeEvent e);

        /// <summary>
        /// The СотрудникиRowChangeEventHandler
        /// </summary>
        /// <param name="sender">The sender<see cref="object"/></param>
        /// <param name="e">The e<see cref="СотрудникиRowChangeEvent"/></param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void СотрудникиRowChangeEventHandler(object sender, СотрудникиRowChangeEvent e);

        /// <summary>
        /// The ФилиалыRowChangeEventHandler
        /// </summary>
        /// <param name="sender">The sender<see cref="object"/></param>
        /// <param name="e">The e<see cref="ФилиалыRowChangeEvent"/></param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void ФилиалыRowChangeEventHandler(object sender, ФилиалыRowChangeEvent e);

        /// <summary>
        /// Represents the strongly named DataTable class.
        /// </summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class АссортиментDataTable : global::System.Data.TypedTableBase<АссортиментRow>
        {
            /// <summary>
            /// Defines the columnКод_товара
            /// </summary>
            private global::System.Data.DataColumn columnКод_товара;

            /// <summary>
            /// Defines the columnНаименование
            /// </summary>
            private global::System.Data.DataColumn columnНаименование;

            /// <summary>
            /// Defines the columnПринадлежность
            /// </summary>
            private global::System.Data.DataColumn columnПринадлежность;

            /// <summary>
            /// Defines the _columnЦена___день
            /// </summary>
            private global::System.Data.DataColumn _columnЦена___день;

            /// <summary>
            /// Initializes a new instance of the <see cref="АссортиментDataTable"/> class.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public АссортиментDataTable()
            {
                this.TableName = "Ассортимент";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="АссортиментDataTable"/> class.
            /// </summary>
            /// <param name="table">The table<see cref="global::System.Data.DataTable"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal АссортиментDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="АссортиментDataTable"/> class.
            /// </summary>
            /// <param name="info">The info<see cref="global::System.Runtime.Serialization.SerializationInfo"/></param>
            /// <param name="context">The context<see cref="global::System.Runtime.Serialization.StreamingContext"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected АссортиментDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            /// <summary>
            /// Gets the Код_товараColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_товараColumn
            {
                get
                {
                    return this.columnКод_товара;
                }
            }

            /// <summary>
            /// Gets the НаименованиеColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn
            {
                get
                {
                    return this.columnНаименование;
                }
            }

            /// <summary>
            /// Gets the ПринадлежностьColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ПринадлежностьColumn
            {
                get
                {
                    return this.columnПринадлежность;
                }
            }

            /// <summary>
            /// Gets the _Цена___деньColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn _Цена___деньColumn
            {
                get
                {
                    return this._columnЦена___день;
                }
            }

            /// <summary>
            /// Gets the Count
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }



            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public АссортиментRow this[int index]
            {
                get
                {
                    return ((АссортиментRow)(this.Rows[index]));
                }
            }
            /// <summary>
            /// Defines the АссортиментRowChanging
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event АссортиментRowChangeEventHandler АссортиментRowChanging;

            /// <summary>
            /// Defines the АссортиментRowChanged
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event АссортиментRowChangeEventHandler АссортиментRowChanged;

            /// <summary>
            /// Defines the АссортиментRowDeleting
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event АссортиментRowChangeEventHandler АссортиментRowDeleting;

            /// <summary>
            /// Defines the АссортиментRowDeleted
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event АссортиментRowChangeEventHandler АссортиментRowDeleted;

            /// <summary>
            /// The AddАссортиментRow
            /// </summary>
            /// <param name="row">The row<see cref="АссортиментRow"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddАссортиментRow(АссортиментRow row)
            {
                this.Rows.Add(row);
            }

            /// <summary>
            /// The AddАссортиментRow
            /// </summary>
            /// <param name="Наименование">The Наименование<see cref="string"/></param>
            /// <param name="parentФилиалыRowByФилиалыАссортимент">The parentФилиалыRowByФилиалыАссортимент<see cref="ФилиалыRow"/></param>
            /// <param name="_Цена___день">The _Цена___день<see cref="int"/></param>
            /// <returns>The <see cref="АссортиментRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public АссортиментRow AddАссортиментRow(string Наименование, ФилиалыRow parentФилиалыRowByФилиалыАссортимент, int _Цена___день)
            {
                АссортиментRow rowАссортиментRow = ((АссортиментRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Наименование,
                        null,
                        _Цена___день};
                if ((parentФилиалыRowByФилиалыАссортимент != null))
                {
                    columnValuesArray[2] = parentФилиалыRowByФилиалыАссортимент[1];
                }
                rowАссортиментRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowАссортиментRow);
                return rowАссортиментRow;
            }

            /// <summary>
            /// The FindByКод_товара
            /// </summary>
            /// <param name="Код_товара">The Код_товара<see cref="int"/></param>
            /// <returns>The <see cref="АссортиментRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public АссортиментRow FindByКод_товара(int Код_товара)
            {
                return ((АссортиментRow)(this.Rows.Find(new object[] {
                            Код_товара})));
            }

            /// <summary>
            /// The Clone
            /// </summary>
            /// <returns>The <see cref="global::System.Data.DataTable"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                АссортиментDataTable cln = ((АссортиментDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            /// <summary>
            /// The CreateInstance
            /// </summary>
            /// <returns>The <see cref="global::System.Data.DataTable"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new АссортиментDataTable();
            }

            /// <summary>
            /// The InitVars
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars()
            {
                this.columnКод_товара = base.Columns["Код товара"];
                this.columnНаименование = base.Columns["Наименование"];
                this.columnПринадлежность = base.Columns["Принадлежность"];
                this._columnЦена___день = base.Columns["Цена $/день"];
            }

            /// <summary>
            /// The InitClass
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass()
            {
                this.columnКод_товара = new global::System.Data.DataColumn("Код товара", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_товара);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.columnПринадлежность = new global::System.Data.DataColumn("Принадлежность", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПринадлежность);
                this._columnЦена___день = new global::System.Data.DataColumn("Цена $/день", typeof(int), null, global::System.Data.MappingType.Element);
                this._columnЦена___день.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnЦена___день");
                this._columnЦена___день.ExtendedProperties.Add("Generator_UserColumnName", "Цена $/день");
                base.Columns.Add(this._columnЦена___день);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_товара}, true));
                this.columnКод_товара.AutoIncrement = true;
                this.columnКод_товара.AutoIncrementSeed = -1;
                this.columnКод_товара.AutoIncrementStep = -1;
                this.columnКод_товара.AllowDBNull = false;
                this.columnКод_товара.Unique = true;
                this.columnНаименование.MaxLength = 255;
                this.columnПринадлежность.MaxLength = 255;
            }

            /// <summary>
            /// The NewАссортиментRow
            /// </summary>
            /// <returns>The <see cref="АссортиментRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public АссортиментRow NewАссортиментRow()
            {
                return ((АссортиментRow)(this.NewRow()));
            }

            /// <summary>
            /// The NewRowFromBuilder
            /// </summary>
            /// <param name="builder">The builder<see cref="global::System.Data.DataRowBuilder"/></param>
            /// <returns>The <see cref="global::System.Data.DataRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new АссортиментRow(builder);
            }

            /// <summary>
            /// The GetRowType
            /// </summary>
            /// <returns>The <see cref="global::System.Type"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(АссортиментRow);
            }

            /// <summary>
            /// The OnRowChanged
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.АссортиментRowChanged != null))
                {
                    this.АссортиментRowChanged(this, new АссортиментRowChangeEvent(((АссортиментRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The OnRowChanging
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.АссортиментRowChanging != null))
                {
                    this.АссортиментRowChanging(this, new АссортиментRowChangeEvent(((АссортиментRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The OnRowDeleted
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.АссортиментRowDeleted != null))
                {
                    this.АссортиментRowDeleted(this, new АссортиментRowChangeEvent(((АссортиментRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The OnRowDeleting
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.АссортиментRowDeleting != null))
                {
                    this.АссортиментRowDeleting(this, new АссортиментRowChangeEvent(((АссортиментRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The RemoveАссортиментRow
            /// </summary>
            /// <param name="row">The row<see cref="АссортиментRow"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveАссортиментRow(АссортиментRow row)
            {
                this.Rows.Remove(row);
            }

            /// <summary>
            /// The GetTypedTableSchema
            /// </summary>
            /// <param name="xs">The xs<see cref="global::System.Xml.Schema.XmlSchemaSet"/></param>
            /// <returns>The <see cref="global::System.Xml.Schema.XmlSchemaComplexType"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BabyConnectionDataSet ds = new BabyConnectionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "АссортиментDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        /// Represents the strongly named DataTable class.
        /// </summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ЗаказDataTable : global::System.Data.TypedTableBase<ЗаказRow>
        {
            /// <summary>
            /// Defines the columnКод
            /// </summary>
            private global::System.Data.DataColumn columnКод;

            /// <summary>
            /// Defines the _columnКол_во_дней_у_клиента
            /// </summary>
            private global::System.Data.DataColumn _columnКол_во_дней_у_клиента;

            /// <summary>
            /// Defines the columnФИО_клиента
            /// </summary>
            private global::System.Data.DataColumn columnФИО_клиента;

            /// <summary>
            /// Defines the columnКод_товара
            /// </summary>
            private global::System.Data.DataColumn columnКод_товара;

            /// <summary>
            /// Defines the columnИтого_к_оплате
            /// </summary>
            private global::System.Data.DataColumn columnИтого_к_оплате;

            /// <summary>
            /// Initializes a new instance of the <see cref="ЗаказDataTable"/> class.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказDataTable()
            {
                this.TableName = "Заказ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="ЗаказDataTable"/> class.
            /// </summary>
            /// <param name="table">The table<see cref="global::System.Data.DataTable"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ЗаказDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="ЗаказDataTable"/> class.
            /// </summary>
            /// <param name="info">The info<see cref="global::System.Runtime.Serialization.SerializationInfo"/></param>
            /// <param name="context">The context<see cref="global::System.Runtime.Serialization.StreamingContext"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected ЗаказDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            /// <summary>
            /// Gets the КодColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn КодColumn
            {
                get
                {
                    return this.columnКод;
                }
            }

            /// <summary>
            /// Gets the _Кол_во_дней_у_клиентаColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn _Кол_во_дней_у_клиентаColumn
            {
                get
                {
                    return this._columnКол_во_дней_у_клиента;
                }
            }

            /// <summary>
            /// Gets the ФИО_клиентаColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ФИО_клиентаColumn
            {
                get
                {
                    return this.columnФИО_клиента;
                }
            }

            /// <summary>
            /// Gets the Код_товараColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_товараColumn
            {
                get
                {
                    return this.columnКод_товара;
                }
            }

            /// <summary>
            /// Gets the Итого_к_оплатеColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Итого_к_оплатеColumn
            {
                get
                {
                    return this.columnИтого_к_оплате;
                }
            }

            /// <summary>
            /// Gets the Count
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }



            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRow this[int index]
            {
                get
                {
                    return ((ЗаказRow)(this.Rows[index]));
                }
            }
            /// <summary>
            /// Defines the ЗаказRowChanging
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ЗаказRowChangeEventHandler ЗаказRowChanging;

            /// <summary>
            /// Defines the ЗаказRowChanged
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ЗаказRowChangeEventHandler ЗаказRowChanged;

            /// <summary>
            /// Defines the ЗаказRowDeleting
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ЗаказRowChangeEventHandler ЗаказRowDeleting;

            /// <summary>
            /// Defines the ЗаказRowDeleted
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ЗаказRowChangeEventHandler ЗаказRowDeleted;

            /// <summary>
            /// The AddЗаказRow
            /// </summary>
            /// <param name="row">The row<see cref="ЗаказRow"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddЗаказRow(ЗаказRow row)
            {
                this.Rows.Add(row);
            }

            /// <summary>
            /// The AddЗаказRow
            /// </summary>
            /// <param name="_Кол_во_дней_у_клиента">The _Кол_во_дней_у_клиента<see cref="int"/></param>
            /// <param name="ФИО_клиента">The ФИО_клиента<see cref="string"/></param>
            /// <param name="parentАссортиментRowByАссортиментЗаказ">The parentАссортиментRowByАссортиментЗаказ<see cref="АссортиментRow"/></param>
            /// <param name="Итого_к_оплате">The Итого_к_оплате<see cref="int"/></param>
            /// <returns>The <see cref="ЗаказRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRow AddЗаказRow(int _Кол_во_дней_у_клиента, string ФИО_клиента, АссортиментRow parentАссортиментRowByАссортиментЗаказ, int Итого_к_оплате)
            {
                ЗаказRow rowЗаказRow = ((ЗаказRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        _Кол_во_дней_у_клиента,
                        ФИО_клиента,
                        null,
                        Итого_к_оплате};
                if ((parentАссортиментRowByАссортиментЗаказ != null))
                {
                    columnValuesArray[3] = parentАссортиментRowByАссортиментЗаказ[0];
                }
                rowЗаказRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЗаказRow);
                return rowЗаказRow;
            }

            /// <summary>
            /// The FindByКод
            /// </summary>
            /// <param name="Код">The Код<see cref="int"/></param>
            /// <returns>The <see cref="ЗаказRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRow FindByКод(int Код)
            {
                return ((ЗаказRow)(this.Rows.Find(new object[] {
                            Код})));
            }

            /// <summary>
            /// The Clone
            /// </summary>
            /// <returns>The <see cref="global::System.Data.DataTable"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                ЗаказDataTable cln = ((ЗаказDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            /// <summary>
            /// The CreateInstance
            /// </summary>
            /// <returns>The <see cref="global::System.Data.DataTable"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new ЗаказDataTable();
            }

            /// <summary>
            /// The InitVars
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars()
            {
                this.columnКод = base.Columns["Код"];
                this._columnКол_во_дней_у_клиента = base.Columns["Кол-во дней у клиента"];
                this.columnФИО_клиента = base.Columns["ФИО клиента"];
                this.columnКод_товара = base.Columns["Код товара"];
                this.columnИтого_к_оплате = base.Columns["Итого к оплате"];
            }

            /// <summary>
            /// The InitClass
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass()
            {
                this.columnКод = new global::System.Data.DataColumn("Код", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод);
                this._columnКол_во_дней_у_клиента = new global::System.Data.DataColumn("Кол-во дней у клиента", typeof(int), null, global::System.Data.MappingType.Element);
                this._columnКол_во_дней_у_клиента.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnКол_во_дней_у_клиента");
                this._columnКол_во_дней_у_клиента.ExtendedProperties.Add("Generator_UserColumnName", "Кол-во дней у клиента");
                base.Columns.Add(this._columnКол_во_дней_у_клиента);
                this.columnФИО_клиента = new global::System.Data.DataColumn("ФИО клиента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО_клиента);
                this.columnКод_товара = new global::System.Data.DataColumn("Код товара", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_товара);
                this.columnИтого_к_оплате = new global::System.Data.DataColumn("Итого к оплате", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИтого_к_оплате);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод}, true));
                this.columnКод.AutoIncrement = true;
                this.columnКод.AutoIncrementSeed = -1;
                this.columnКод.AutoIncrementStep = -1;
                this.columnКод.AllowDBNull = false;
                this.columnКод.Unique = true;
                this.columnФИО_клиента.MaxLength = 255;
            }

            /// <summary>
            /// The NewЗаказRow
            /// </summary>
            /// <returns>The <see cref="ЗаказRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRow NewЗаказRow()
            {
                return ((ЗаказRow)(this.NewRow()));
            }

            /// <summary>
            /// The NewRowFromBuilder
            /// </summary>
            /// <param name="builder">The builder<see cref="global::System.Data.DataRowBuilder"/></param>
            /// <returns>The <see cref="global::System.Data.DataRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new ЗаказRow(builder);
            }

            /// <summary>
            /// The GetRowType
            /// </summary>
            /// <returns>The <see cref="global::System.Type"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(ЗаказRow);
            }

            /// <summary>
            /// The OnRowChanged
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.ЗаказRowChanged != null))
                {
                    this.ЗаказRowChanged(this, new ЗаказRowChangeEvent(((ЗаказRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The OnRowChanging
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.ЗаказRowChanging != null))
                {
                    this.ЗаказRowChanging(this, new ЗаказRowChangeEvent(((ЗаказRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The OnRowDeleted
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.ЗаказRowDeleted != null))
                {
                    this.ЗаказRowDeleted(this, new ЗаказRowChangeEvent(((ЗаказRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The OnRowDeleting
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.ЗаказRowDeleting != null))
                {
                    this.ЗаказRowDeleting(this, new ЗаказRowChangeEvent(((ЗаказRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The RemoveЗаказRow
            /// </summary>
            /// <param name="row">The row<see cref="ЗаказRow"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveЗаказRow(ЗаказRow row)
            {
                this.Rows.Remove(row);
            }

            /// <summary>
            /// The GetTypedTableSchema
            /// </summary>
            /// <param name="xs">The xs<see cref="global::System.Xml.Schema.XmlSchemaSet"/></param>
            /// <returns>The <see cref="global::System.Xml.Schema.XmlSchemaComplexType"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BabyConnectionDataSet ds = new BabyConnectionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ЗаказDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        /// Represents the strongly named DataTable class.
        /// </summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class СотрудникиDataTable : global::System.Data.TypedTableBase<СотрудникиRow>
        {
            /// <summary>
            /// Defines the columnКод_сотрудника
            /// </summary>
            private global::System.Data.DataColumn columnКод_сотрудника;

            /// <summary>
            /// Defines the columnФИО
            /// </summary>
            private global::System.Data.DataColumn columnФИО;

            /// <summary>
            /// Defines the _columnЗП____
            /// </summary>
            private global::System.Data.DataColumn _columnЗП____;

            /// <summary>
            /// Defines the columnДолжность
            /// </summary>
            private global::System.Data.DataColumn columnДолжность;

            /// <summary>
            /// Defines the columnЧасов_в_неделю
            /// </summary>
            private global::System.Data.DataColumn columnЧасов_в_неделю;

            /// <summary>
            /// Defines the columnФилиал
            /// </summary>
            private global::System.Data.DataColumn columnФилиал;

            /// <summary>
            /// Initializes a new instance of the <see cref="СотрудникиDataTable"/> class.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникиDataTable()
            {
                this.TableName = "Сотрудники";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="СотрудникиDataTable"/> class.
            /// </summary>
            /// <param name="table">The table<see cref="global::System.Data.DataTable"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal СотрудникиDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="СотрудникиDataTable"/> class.
            /// </summary>
            /// <param name="info">The info<see cref="global::System.Runtime.Serialization.SerializationInfo"/></param>
            /// <param name="context">The context<see cref="global::System.Runtime.Serialization.StreamingContext"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected СотрудникиDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            /// <summary>
            /// Gets the Код_сотрудникаColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_сотрудникаColumn
            {
                get
                {
                    return this.columnКод_сотрудника;
                }
            }

            /// <summary>
            /// Gets the ФИОColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn
            {
                get
                {
                    return this.columnФИО;
                }
            }

            /// <summary>
            /// Gets the _ЗП____Column
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn _ЗП____Column
            {
                get
                {
                    return this._columnЗП____;
                }
            }

            /// <summary>
            /// Gets the ДолжностьColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ДолжностьColumn
            {
                get
                {
                    return this.columnДолжность;
                }
            }

            /// <summary>
            /// Gets the Часов_в_неделюColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Часов_в_неделюColumn
            {
                get
                {
                    return this.columnЧасов_в_неделю;
                }
            }

            /// <summary>
            /// Gets the ФилиалColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ФилиалColumn
            {
                get
                {
                    return this.columnФилиал;
                }
            }

            /// <summary>
            /// Gets the Count
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }



            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникиRow this[int index]
            {
                get
                {
                    return ((СотрудникиRow)(this.Rows[index]));
                }
            }
            /// <summary>
            /// Defines the СотрудникиRowChanging
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowChanging;

            /// <summary>
            /// Defines the СотрудникиRowChanged
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowChanged;

            /// <summary>
            /// Defines the СотрудникиRowDeleting
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowDeleting;

            /// <summary>
            /// Defines the СотрудникиRowDeleted
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowDeleted;

            /// <summary>
            /// The AddСотрудникиRow
            /// </summary>
            /// <param name="row">The row<see cref="СотрудникиRow"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddСотрудникиRow(СотрудникиRow row)
            {
                this.Rows.Add(row);
            }

            /// <summary>
            /// The AddСотрудникиRow
            /// </summary>
            /// <param name="ФИО">The ФИО<see cref="string"/></param>
            /// <param name="_ЗП____">The _ЗП____<see cref="int"/></param>
            /// <param name="Должность">The Должность<see cref="string"/></param>
            /// <param name="Часов_в_неделю">The Часов_в_неделю<see cref="int"/></param>
            /// <param name="parentФилиалыRowByФилиалыСотрудники">The parentФилиалыRowByФилиалыСотрудники<see cref="ФилиалыRow"/></param>
            /// <returns>The <see cref="СотрудникиRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникиRow AddСотрудникиRow(string ФИО, int _ЗП____, string Должность, int Часов_в_неделю, ФилиалыRow parentФилиалыRowByФилиалыСотрудники)
            {
                СотрудникиRow rowСотрудникиRow = ((СотрудникиRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ФИО,
                        _ЗП____,
                        Должность,
                        Часов_в_неделю,
                        null};
                if ((parentФилиалыRowByФилиалыСотрудники != null))
                {
                    columnValuesArray[5] = parentФилиалыRowByФилиалыСотрудники[1];
                }
                rowСотрудникиRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСотрудникиRow);
                return rowСотрудникиRow;
            }

            /// <summary>
            /// The FindByКод_сотрудника
            /// </summary>
            /// <param name="Код_сотрудника">The Код_сотрудника<see cref="int"/></param>
            /// <returns>The <see cref="СотрудникиRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникиRow FindByКод_сотрудника(int Код_сотрудника)
            {
                return ((СотрудникиRow)(this.Rows.Find(new object[] {
                            Код_сотрудника})));
            }

            /// <summary>
            /// The Clone
            /// </summary>
            /// <returns>The <see cref="global::System.Data.DataTable"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                СотрудникиDataTable cln = ((СотрудникиDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            /// <summary>
            /// The CreateInstance
            /// </summary>
            /// <returns>The <see cref="global::System.Data.DataTable"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new СотрудникиDataTable();
            }

            /// <summary>
            /// The InitVars
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars()
            {
                this.columnКод_сотрудника = base.Columns["Код сотрудника"];
                this.columnФИО = base.Columns["ФИО"];
                this._columnЗП____ = base.Columns["ЗП ($)"];
                this.columnДолжность = base.Columns["Должность"];
                this.columnЧасов_в_неделю = base.Columns["Часов в неделю"];
                this.columnФилиал = base.Columns["Филиал"];
            }

            /// <summary>
            /// The InitClass
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass()
            {
                this.columnКод_сотрудника = new global::System.Data.DataColumn("Код сотрудника", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_сотрудника);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this._columnЗП____ = new global::System.Data.DataColumn("ЗП ($)", typeof(int), null, global::System.Data.MappingType.Element);
                this._columnЗП____.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnЗП____");
                this._columnЗП____.ExtendedProperties.Add("Generator_UserColumnName", "ЗП ($)");
                base.Columns.Add(this._columnЗП____);
                this.columnДолжность = new global::System.Data.DataColumn("Должность", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДолжность);
                this.columnЧасов_в_неделю = new global::System.Data.DataColumn("Часов в неделю", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЧасов_в_неделю);
                this.columnФилиал = new global::System.Data.DataColumn("Филиал", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФилиал);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_сотрудника}, true));
                this.columnКод_сотрудника.AutoIncrement = true;
                this.columnКод_сотрудника.AutoIncrementSeed = -1;
                this.columnКод_сотрудника.AutoIncrementStep = -1;
                this.columnКод_сотрудника.AllowDBNull = false;
                this.columnКод_сотрудника.Unique = true;
                this.columnФИО.MaxLength = 255;
                this.columnДолжность.MaxLength = 255;
                this.columnФилиал.MaxLength = 255;
            }

            /// <summary>
            /// The NewСотрудникиRow
            /// </summary>
            /// <returns>The <see cref="СотрудникиRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникиRow NewСотрудникиRow()
            {
                return ((СотрудникиRow)(this.NewRow()));
            }

            /// <summary>
            /// The NewRowFromBuilder
            /// </summary>
            /// <param name="builder">The builder<see cref="global::System.Data.DataRowBuilder"/></param>
            /// <returns>The <see cref="global::System.Data.DataRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new СотрудникиRow(builder);
            }

            /// <summary>
            /// The GetRowType
            /// </summary>
            /// <returns>The <see cref="global::System.Type"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(СотрудникиRow);
            }

            /// <summary>
            /// The OnRowChanged
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.СотрудникиRowChanged != null))
                {
                    this.СотрудникиRowChanged(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The OnRowChanging
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.СотрудникиRowChanging != null))
                {
                    this.СотрудникиRowChanging(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The OnRowDeleted
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.СотрудникиRowDeleted != null))
                {
                    this.СотрудникиRowDeleted(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The OnRowDeleting
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.СотрудникиRowDeleting != null))
                {
                    this.СотрудникиRowDeleting(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The RemoveСотрудникиRow
            /// </summary>
            /// <param name="row">The row<see cref="СотрудникиRow"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveСотрудникиRow(СотрудникиRow row)
            {
                this.Rows.Remove(row);
            }

            /// <summary>
            /// The GetTypedTableSchema
            /// </summary>
            /// <param name="xs">The xs<see cref="global::System.Xml.Schema.XmlSchemaSet"/></param>
            /// <returns>The <see cref="global::System.Xml.Schema.XmlSchemaComplexType"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BabyConnectionDataSet ds = new BabyConnectionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "СотрудникиDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        /// Represents the strongly named DataTable class.
        /// </summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ФилиалыDataTable : global::System.Data.TypedTableBase<ФилиалыRow>
        {
            /// <summary>
            /// Defines the columnКод_филиала
            /// </summary>
            private global::System.Data.DataColumn columnКод_филиала;

            /// <summary>
            /// Defines the columnФилиал
            /// </summary>
            private global::System.Data.DataColumn columnФилиал;

            /// <summary>
            /// Defines the columnРуководитель
            /// </summary>
            private global::System.Data.DataColumn columnРуководитель;

            /// <summary>
            /// Defines the columnОсновное_направление
            /// </summary>
            private global::System.Data.DataColumn columnОсновное_направление;

            /// <summary>
            /// Defines the columnРасположение
            /// </summary>
            private global::System.Data.DataColumn columnРасположение;

            /// <summary>
            /// Initializes a new instance of the <see cref="ФилиалыDataTable"/> class.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ФилиалыDataTable()
            {
                this.TableName = "Филиалы";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="ФилиалыDataTable"/> class.
            /// </summary>
            /// <param name="table">The table<see cref="global::System.Data.DataTable"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ФилиалыDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="ФилиалыDataTable"/> class.
            /// </summary>
            /// <param name="info">The info<see cref="global::System.Runtime.Serialization.SerializationInfo"/></param>
            /// <param name="context">The context<see cref="global::System.Runtime.Serialization.StreamingContext"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected ФилиалыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            /// <summary>
            /// Gets the Код_филиалаColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_филиалаColumn
            {
                get
                {
                    return this.columnКод_филиала;
                }
            }

            /// <summary>
            /// Gets the ФилиалColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ФилиалColumn
            {
                get
                {
                    return this.columnФилиал;
                }
            }

            /// <summary>
            /// Gets the РуководительColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn РуководительColumn
            {
                get
                {
                    return this.columnРуководитель;
                }
            }

            /// <summary>
            /// Gets the Основное_направлениеColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Основное_направлениеColumn
            {
                get
                {
                    return this.columnОсновное_направление;
                }
            }

            /// <summary>
            /// Gets the РасположениеColumn
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn РасположениеColumn
            {
                get
                {
                    return this.columnРасположение;
                }
            }

            /// <summary>
            /// Gets the Count
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }



            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ФилиалыRow this[int index]
            {
                get
                {
                    return ((ФилиалыRow)(this.Rows[index]));
                }
            }
            /// <summary>
            /// Defines the ФилиалыRowChanging
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ФилиалыRowChangeEventHandler ФилиалыRowChanging;

            /// <summary>
            /// Defines the ФилиалыRowChanged
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ФилиалыRowChangeEventHandler ФилиалыRowChanged;

            /// <summary>
            /// Defines the ФилиалыRowDeleting
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ФилиалыRowChangeEventHandler ФилиалыRowDeleting;

            /// <summary>
            /// Defines the ФилиалыRowDeleted
            /// </summary>
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ФилиалыRowChangeEventHandler ФилиалыRowDeleted;

            /// <summary>
            /// The AddФилиалыRow
            /// </summary>
            /// <param name="row">The row<see cref="ФилиалыRow"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddФилиалыRow(ФилиалыRow row)
            {
                this.Rows.Add(row);
            }

            /// <summary>
            /// The AddФилиалыRow
            /// </summary>
            /// <param name="Филиал">The Филиал<see cref="string"/></param>
            /// <param name="Руководитель">The Руководитель<see cref="string"/></param>
            /// <param name="Основное_направление">The Основное_направление<see cref="string"/></param>
            /// <param name="Расположение">The Расположение<see cref="string"/></param>
            /// <returns>The <see cref="ФилиалыRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ФилиалыRow AddФилиалыRow(string Филиал, string Руководитель, string Основное_направление, string Расположение)
            {
                ФилиалыRow rowФилиалыRow = ((ФилиалыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Филиал,
                        Руководитель,
                        Основное_направление,
                        Расположение};
                rowФилиалыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowФилиалыRow);
                return rowФилиалыRow;
            }

            /// <summary>
            /// The FindByФилиал
            /// </summary>
            /// <param name="Филиал">The Филиал<see cref="string"/></param>
            /// <returns>The <see cref="ФилиалыRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ФилиалыRow FindByФилиал(string Филиал)
            {
                return ((ФилиалыRow)(this.Rows.Find(new object[] {
                            Филиал})));
            }

            /// <summary>
            /// The Clone
            /// </summary>
            /// <returns>The <see cref="global::System.Data.DataTable"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                ФилиалыDataTable cln = ((ФилиалыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            /// <summary>
            /// The CreateInstance
            /// </summary>
            /// <returns>The <see cref="global::System.Data.DataTable"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new ФилиалыDataTable();
            }

            /// <summary>
            /// The InitVars
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars()
            {
                this.columnКод_филиала = base.Columns["Код филиала"];
                this.columnФилиал = base.Columns["Филиал"];
                this.columnРуководитель = base.Columns["Руководитель"];
                this.columnОсновное_направление = base.Columns["Основное направление"];
                this.columnРасположение = base.Columns["Расположение"];
            }

            /// <summary>
            /// The InitClass
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass()
            {
                this.columnКод_филиала = new global::System.Data.DataColumn("Код филиала", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_филиала);
                this.columnФилиал = new global::System.Data.DataColumn("Филиал", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФилиал);
                this.columnРуководитель = new global::System.Data.DataColumn("Руководитель", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРуководитель);
                this.columnОсновное_направление = new global::System.Data.DataColumn("Основное направление", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОсновное_направление);
                this.columnРасположение = new global::System.Data.DataColumn("Расположение", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРасположение);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnФилиал}, true));
                this.columnКод_филиала.AutoIncrement = true;
                this.columnКод_филиала.AutoIncrementSeed = -1;
                this.columnКод_филиала.AutoIncrementStep = -1;
                this.columnФилиал.AllowDBNull = false;
                this.columnФилиал.Unique = true;
                this.columnФилиал.MaxLength = 255;
                this.columnРуководитель.MaxLength = 255;
                this.columnОсновное_направление.MaxLength = 255;
                this.columnРасположение.MaxLength = 255;
            }

            /// <summary>
            /// The NewФилиалыRow
            /// </summary>
            /// <returns>The <see cref="ФилиалыRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ФилиалыRow NewФилиалыRow()
            {
                return ((ФилиалыRow)(this.NewRow()));
            }

            /// <summary>
            /// The NewRowFromBuilder
            /// </summary>
            /// <param name="builder">The builder<see cref="global::System.Data.DataRowBuilder"/></param>
            /// <returns>The <see cref="global::System.Data.DataRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new ФилиалыRow(builder);
            }

            /// <summary>
            /// The GetRowType
            /// </summary>
            /// <returns>The <see cref="global::System.Type"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(ФилиалыRow);
            }

            /// <summary>
            /// The OnRowChanged
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.ФилиалыRowChanged != null))
                {
                    this.ФилиалыRowChanged(this, new ФилиалыRowChangeEvent(((ФилиалыRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The OnRowChanging
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.ФилиалыRowChanging != null))
                {
                    this.ФилиалыRowChanging(this, new ФилиалыRowChangeEvent(((ФилиалыRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The OnRowDeleted
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.ФилиалыRowDeleted != null))
                {
                    this.ФилиалыRowDeleted(this, new ФилиалыRowChangeEvent(((ФилиалыRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The OnRowDeleting
            /// </summary>
            /// <param name="e">The e<see cref="global::System.Data.DataRowChangeEventArgs"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.ФилиалыRowDeleting != null))
                {
                    this.ФилиалыRowDeleting(this, new ФилиалыRowChangeEvent(((ФилиалыRow)(e.Row)), e.Action));
                }
            }

            /// <summary>
            /// The RemoveФилиалыRow
            /// </summary>
            /// <param name="row">The row<see cref="ФилиалыRow"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveФилиалыRow(ФилиалыRow row)
            {
                this.Rows.Remove(row);
            }

            /// <summary>
            /// The GetTypedTableSchema
            /// </summary>
            /// <param name="xs">The xs<see cref="global::System.Xml.Schema.XmlSchemaSet"/></param>
            /// <returns>The <see cref="global::System.Xml.Schema.XmlSchemaComplexType"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BabyConnectionDataSet ds = new BabyConnectionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ФилиалыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        /// Represents strongly named DataRow class.
        /// </summary>
        public partial class АссортиментRow : global::System.Data.DataRow
        {
            /// <summary>
            /// Defines the tableАссортимент
            /// </summary>
            private АссортиментDataTable tableАссортимент;

            /// <summary>
            /// Initializes a new instance of the <see cref="АссортиментRow"/> class.
            /// </summary>
            /// <param name="rb">The rb<see cref="global::System.Data.DataRowBuilder"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal АссортиментRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableАссортимент = ((АссортиментDataTable)(this.Table));
            }

            /// <summary>
            /// Gets or sets the Код_товара
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_товара
            {
                get
                {
                    return ((int)(this[this.tableАссортимент.Код_товараColumn]));
                }
                set
                {
                    this[this.tableАссортимент.Код_товараColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the Наименование
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Наименование
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableАссортимент.НаименованиеColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Наименование\' в таблице \'Ассортимент\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableАссортимент.НаименованиеColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the Принадлежность
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Принадлежность
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableАссортимент.ПринадлежностьColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Принадлежность\' в таблице \'Ассортимент\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableАссортимент.ПринадлежностьColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the _Цена___день
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int _Цена___день
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableАссортимент._Цена___деньColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Цена $/день\' в таблице \'Ассортимент\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableАссортимент._Цена___деньColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the ФилиалыRow
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ФилиалыRow ФилиалыRow
            {
                get
                {
                    return ((ФилиалыRow)(this.GetParentRow(this.Table.ParentRelations["ФилиалыАссортимент"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["ФилиалыАссортимент"]);
                }
            }

            /// <summary>
            /// The IsНаименованиеNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsНаименованиеNull()
            {
                return this.IsNull(this.tableАссортимент.НаименованиеColumn);
            }

            /// <summary>
            /// The SetНаименованиеNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetНаименованиеNull()
            {
                this[this.tableАссортимент.НаименованиеColumn] = global::System.Convert.DBNull;
            }

            /// <summary>
            /// The IsПринадлежностьNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsПринадлежностьNull()
            {
                return this.IsNull(this.tableАссортимент.ПринадлежностьColumn);
            }

            /// <summary>
            /// The SetПринадлежностьNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetПринадлежностьNull()
            {
                this[this.tableАссортимент.ПринадлежностьColumn] = global::System.Convert.DBNull;
            }

            /// <summary>
            /// The Is_Цена___деньNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is_Цена___деньNull()
            {
                return this.IsNull(this.tableАссортимент._Цена___деньColumn);
            }

            /// <summary>
            /// The Set_Цена___деньNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set_Цена___деньNull()
            {
                this[this.tableАссортимент._Цена___деньColumn] = global::System.Convert.DBNull;
            }

            /// <summary>
            /// The GetЗаказRows
            /// </summary>
            /// <returns>The <see cref="ЗаказRow[]"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRow[] GetЗаказRows()
            {
                if ((this.Table.ChildRelations["АссортиментЗаказ"] == null))
                {
                    return new ЗаказRow[0];
                }
                else
                {
                    return ((ЗаказRow[])(base.GetChildRows(this.Table.ChildRelations["АссортиментЗаказ"])));
                }
            }
        }

        /// <summary>
        /// Represents strongly named DataRow class.
        /// </summary>
        public partial class ЗаказRow : global::System.Data.DataRow
        {
            /// <summary>
            /// Defines the tableЗаказ
            /// </summary>
            private ЗаказDataTable tableЗаказ;

            /// <summary>
            /// Initializes a new instance of the <see cref="ЗаказRow"/> class.
            /// </summary>
            /// <param name="rb">The rb<see cref="global::System.Data.DataRowBuilder"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ЗаказRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableЗаказ = ((ЗаказDataTable)(this.Table));
            }

            /// <summary>
            /// Gets or sets the Код
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код
            {
                get
                {
                    return ((int)(this[this.tableЗаказ.КодColumn]));
                }
                set
                {
                    this[this.tableЗаказ.КодColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the _Кол_во_дней_у_клиента
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int _Кол_во_дней_у_клиента
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableЗаказ._Кол_во_дней_у_клиентаColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Кол-во дней у клиента\' в таблице \'Заказ\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableЗаказ._Кол_во_дней_у_клиентаColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the ФИО_клиента
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ФИО_клиента
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableЗаказ.ФИО_клиентаColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ФИО клиента\' в таблице \'Заказ\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableЗаказ.ФИО_клиентаColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the Код_товара
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_товара
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableЗаказ.Код_товараColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Код товара\' в таблице \'Заказ\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableЗаказ.Код_товараColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the Итого_к_оплате
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Итого_к_оплате
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableЗаказ.Итого_к_оплатеColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Итого к оплате\' в таблице \'Заказ\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableЗаказ.Итого_к_оплатеColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the АссортиментRow
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public АссортиментRow АссортиментRow
            {
                get
                {
                    return ((АссортиментRow)(this.GetParentRow(this.Table.ParentRelations["АссортиментЗаказ"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["АссортиментЗаказ"]);
                }
            }

            /// <summary>
            /// The Is_Кол_во_дней_у_клиентаNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is_Кол_во_дней_у_клиентаNull()
            {
                return this.IsNull(this.tableЗаказ._Кол_во_дней_у_клиентаColumn);
            }

            /// <summary>
            /// The Set_Кол_во_дней_у_клиентаNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set_Кол_во_дней_у_клиентаNull()
            {
                this[this.tableЗаказ._Кол_во_дней_у_клиентаColumn] = global::System.Convert.DBNull;
            }

            /// <summary>
            /// The IsФИО_клиентаNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsФИО_клиентаNull()
            {
                return this.IsNull(this.tableЗаказ.ФИО_клиентаColumn);
            }

            /// <summary>
            /// The SetФИО_клиентаNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetФИО_клиентаNull()
            {
                this[this.tableЗаказ.ФИО_клиентаColumn] = global::System.Convert.DBNull;
            }

            /// <summary>
            /// The IsКод_товараNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsКод_товараNull()
            {
                return this.IsNull(this.tableЗаказ.Код_товараColumn);
            }

            /// <summary>
            /// The SetКод_товараNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetКод_товараNull()
            {
                this[this.tableЗаказ.Код_товараColumn] = global::System.Convert.DBNull;
            }

            /// <summary>
            /// The IsИтого_к_оплатеNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsИтого_к_оплатеNull()
            {
                return this.IsNull(this.tableЗаказ.Итого_к_оплатеColumn);
            }

            /// <summary>
            /// The SetИтого_к_оплатеNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetИтого_к_оплатеNull()
            {
                this[this.tableЗаказ.Итого_к_оплатеColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        /// Represents strongly named DataRow class.
        /// </summary>
        public partial class СотрудникиRow : global::System.Data.DataRow
        {
            /// <summary>
            /// Defines the tableСотрудники
            /// </summary>
            private СотрудникиDataTable tableСотрудники;

            /// <summary>
            /// Initializes a new instance of the <see cref="СотрудникиRow"/> class.
            /// </summary>
            /// <param name="rb">The rb<see cref="global::System.Data.DataRowBuilder"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal СотрудникиRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableСотрудники = ((СотрудникиDataTable)(this.Table));
            }

            /// <summary>
            /// Gets or sets the Код_сотрудника
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_сотрудника
            {
                get
                {
                    return ((int)(this[this.tableСотрудники.Код_сотрудникаColumn]));
                }
                set
                {
                    this[this.tableСотрудники.Код_сотрудникаColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the ФИО
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ФИО
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableСотрудники.ФИОColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ФИО\' в таблице \'Сотрудники\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableСотрудники.ФИОColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the _ЗП____
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int _ЗП____
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableСотрудники._ЗП____Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ЗП ($)\' в таблице \'Сотрудники\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableСотрудники._ЗП____Column] = value;
                }
            }

            /// <summary>
            /// Gets or sets the Должность
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Должность
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableСотрудники.ДолжностьColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Должность\' в таблице \'Сотрудники\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableСотрудники.ДолжностьColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the Часов_в_неделю
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Часов_в_неделю
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableСотрудники.Часов_в_неделюColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Часов в неделю\' в таблице \'Сотрудники\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableСотрудники.Часов_в_неделюColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the Филиал
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Филиал
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableСотрудники.ФилиалColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Филиал\' в таблице \'Сотрудники\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableСотрудники.ФилиалColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the ФилиалыRow
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ФилиалыRow ФилиалыRow
            {
                get
                {
                    return ((ФилиалыRow)(this.GetParentRow(this.Table.ParentRelations["ФилиалыСотрудники"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["ФилиалыСотрудники"]);
                }
            }

            /// <summary>
            /// The IsФИОNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsФИОNull()
            {
                return this.IsNull(this.tableСотрудники.ФИОColumn);
            }

            /// <summary>
            /// The SetФИОNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetФИОNull()
            {
                this[this.tableСотрудники.ФИОColumn] = global::System.Convert.DBNull;
            }

            /// <summary>
            /// The Is_ЗП____Null
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is_ЗП____Null()
            {
                return this.IsNull(this.tableСотрудники._ЗП____Column);
            }

            /// <summary>
            /// The Set_ЗП____Null
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set_ЗП____Null()
            {
                this[this.tableСотрудники._ЗП____Column] = global::System.Convert.DBNull;
            }

            /// <summary>
            /// The IsДолжностьNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsДолжностьNull()
            {
                return this.IsNull(this.tableСотрудники.ДолжностьColumn);
            }

            /// <summary>
            /// The SetДолжностьNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetДолжностьNull()
            {
                this[this.tableСотрудники.ДолжностьColumn] = global::System.Convert.DBNull;
            }

            /// <summary>
            /// The IsЧасов_в_неделюNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsЧасов_в_неделюNull()
            {
                return this.IsNull(this.tableСотрудники.Часов_в_неделюColumn);
            }

            /// <summary>
            /// The SetЧасов_в_неделюNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetЧасов_в_неделюNull()
            {
                this[this.tableСотрудники.Часов_в_неделюColumn] = global::System.Convert.DBNull;
            }

            /// <summary>
            /// The IsФилиалNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsФилиалNull()
            {
                return this.IsNull(this.tableСотрудники.ФилиалColumn);
            }

            /// <summary>
            /// The SetФилиалNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetФилиалNull()
            {
                this[this.tableСотрудники.ФилиалColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        /// Represents strongly named DataRow class.
        /// </summary>
        public partial class ФилиалыRow : global::System.Data.DataRow
        {
            /// <summary>
            /// Defines the tableФилиалы
            /// </summary>
            private ФилиалыDataTable tableФилиалы;

            /// <summary>
            /// Initializes a new instance of the <see cref="ФилиалыRow"/> class.
            /// </summary>
            /// <param name="rb">The rb<see cref="global::System.Data.DataRowBuilder"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ФилиалыRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableФилиалы = ((ФилиалыDataTable)(this.Table));
            }

            /// <summary>
            /// Gets or sets the Код_филиала
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_филиала
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableФилиалы.Код_филиалаColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Код филиала\' в таблице \'Филиалы\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableФилиалы.Код_филиалаColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the Филиал
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Филиал
            {
                get
                {
                    return ((string)(this[this.tableФилиалы.ФилиалColumn]));
                }
                set
                {
                    this[this.tableФилиалы.ФилиалColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the Руководитель
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Руководитель
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableФилиалы.РуководительColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Руководитель\' в таблице \'Филиалы\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableФилиалы.РуководительColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the Основное_направление
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Основное_направление
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableФилиалы.Основное_направлениеColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Основное направление\' в таблице \'Филиалы\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableФилиалы.Основное_направлениеColumn] = value;
                }
            }

            /// <summary>
            /// Gets or sets the Расположение
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Расположение
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableФилиалы.РасположениеColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Расположение\' в таблице \'Филиалы\' равно DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableФилиалы.РасположениеColumn] = value;
                }
            }

            /// <summary>
            /// The IsКод_филиалаNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsКод_филиалаNull()
            {
                return this.IsNull(this.tableФилиалы.Код_филиалаColumn);
            }

            /// <summary>
            /// The SetКод_филиалаNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetКод_филиалаNull()
            {
                this[this.tableФилиалы.Код_филиалаColumn] = global::System.Convert.DBNull;
            }

            /// <summary>
            /// The IsРуководительNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsРуководительNull()
            {
                return this.IsNull(this.tableФилиалы.РуководительColumn);
            }

            /// <summary>
            /// The SetРуководительNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetРуководительNull()
            {
                this[this.tableФилиалы.РуководительColumn] = global::System.Convert.DBNull;
            }

            /// <summary>
            /// The IsОсновное_направлениеNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsОсновное_направлениеNull()
            {
                return this.IsNull(this.tableФилиалы.Основное_направлениеColumn);
            }

            /// <summary>
            /// The SetОсновное_направлениеNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetОсновное_направлениеNull()
            {
                this[this.tableФилиалы.Основное_направлениеColumn] = global::System.Convert.DBNull;
            }

            /// <summary>
            /// The IsРасположениеNull
            /// </summary>
            /// <returns>The <see cref="bool"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsРасположениеNull()
            {
                return this.IsNull(this.tableФилиалы.РасположениеColumn);
            }

            /// <summary>
            /// The SetРасположениеNull
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetРасположениеNull()
            {
                this[this.tableФилиалы.РасположениеColumn] = global::System.Convert.DBNull;
            }

            /// <summary>
            /// The GetАссортиментRows
            /// </summary>
            /// <returns>The <see cref="АссортиментRow[]"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public АссортиментRow[] GetАссортиментRows()
            {
                if ((this.Table.ChildRelations["ФилиалыАссортимент"] == null))
                {
                    return new АссортиментRow[0];
                }
                else
                {
                    return ((АссортиментRow[])(base.GetChildRows(this.Table.ChildRelations["ФилиалыАссортимент"])));
                }
            }

            /// <summary>
            /// The GetСотрудникиRows
            /// </summary>
            /// <returns>The <see cref="СотрудникиRow[]"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникиRow[] GetСотрудникиRows()
            {
                if ((this.Table.ChildRelations["ФилиалыСотрудники"] == null))
                {
                    return new СотрудникиRow[0];
                }
                else
                {
                    return ((СотрудникиRow[])(base.GetChildRows(this.Table.ChildRelations["ФилиалыСотрудники"])));
                }
            }
        }

        /// <summary>
        /// Row event argument class
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class АссортиментRowChangeEvent : global::System.EventArgs
        {
            /// <summary>
            /// Defines the eventRow
            /// </summary>
            private АссортиментRow eventRow;

            /// <summary>
            /// Defines the eventAction
            /// </summary>
            private global::System.Data.DataRowAction eventAction;

            /// <summary>
            /// Initializes a new instance of the <see cref="АссортиментRowChangeEvent"/> class.
            /// </summary>
            /// <param name="row">The row<see cref="АссортиментRow"/></param>
            /// <param name="action">The action<see cref="global::System.Data.DataRowAction"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public АссортиментRowChangeEvent(АссортиментRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            /// <summary>
            /// Gets the Row
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public АссортиментRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            /// <summary>
            /// Gets the Action
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        /// Row event argument class
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class ЗаказRowChangeEvent : global::System.EventArgs
        {
            /// <summary>
            /// Defines the eventRow
            /// </summary>
            private ЗаказRow eventRow;

            /// <summary>
            /// Defines the eventAction
            /// </summary>
            private global::System.Data.DataRowAction eventAction;

            /// <summary>
            /// Initializes a new instance of the <see cref="ЗаказRowChangeEvent"/> class.
            /// </summary>
            /// <param name="row">The row<see cref="ЗаказRow"/></param>
            /// <param name="action">The action<see cref="global::System.Data.DataRowAction"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRowChangeEvent(ЗаказRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            /// <summary>
            /// Gets the Row
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            /// <summary>
            /// Gets the Action
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        /// Row event argument class
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class СотрудникиRowChangeEvent : global::System.EventArgs
        {
            /// <summary>
            /// Defines the eventRow
            /// </summary>
            private СотрудникиRow eventRow;

            /// <summary>
            /// Defines the eventAction
            /// </summary>
            private global::System.Data.DataRowAction eventAction;

            /// <summary>
            /// Initializes a new instance of the <see cref="СотрудникиRowChangeEvent"/> class.
            /// </summary>
            /// <param name="row">The row<see cref="СотрудникиRow"/></param>
            /// <param name="action">The action<see cref="global::System.Data.DataRowAction"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникиRowChangeEvent(СотрудникиRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            /// <summary>
            /// Gets the Row
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникиRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            /// <summary>
            /// Gets the Action
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        /// Row event argument class
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class ФилиалыRowChangeEvent : global::System.EventArgs
        {
            /// <summary>
            /// Defines the eventRow
            /// </summary>
            private ФилиалыRow eventRow;

            /// <summary>
            /// Defines the eventAction
            /// </summary>
            private global::System.Data.DataRowAction eventAction;

            /// <summary>
            /// Initializes a new instance of the <see cref="ФилиалыRowChangeEvent"/> class.
            /// </summary>
            /// <param name="row">The row<see cref="ФилиалыRow"/></param>
            /// <param name="action">The action<see cref="global::System.Data.DataRowAction"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ФилиалыRowChangeEvent(ФилиалыRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            /// <summary>
            /// Gets the Row
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ФилиалыRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            /// <summary>
            /// Gets the Action
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }
    }
}

namespace WindowsFormsApp1.BabyConnectionDataSetTableAdapters
{
    /// <summary>
    /// Represents the connection and commands used to retrieve and save data.
    /// </summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class АссортиментTableAdapter : global::System.ComponentModel.Component
    {
        /// <summary>
        /// Defines the _adapter
        /// </summary>
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;

        /// <summary>
        /// Defines the _connection
        /// </summary>
        private global::System.Data.OleDb.OleDbConnection _connection;

        /// <summary>
        /// Defines the _transaction
        /// </summary>
        private global::System.Data.OleDb.OleDbTransaction _transaction;

        /// <summary>
        /// Defines the _commandCollection
        /// </summary>
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;

        /// <summary>
        /// Defines the _clearBeforeFill
        /// </summary>
        private bool _clearBeforeFill;

        /// <summary>
        /// Initializes a new instance of the <see cref="АссортиментTableAdapter"/> class.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public АссортиментTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        /// <summary>
        /// Gets the Adapter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        /// <summary>
        /// Gets or sets the Connection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.OleDb.OleDbConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        /// <summary>
        /// Gets or sets the Transaction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.OleDb.OleDbTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        /// <summary>
        /// Gets the CommandCollection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        /// <summary>
        /// Gets or sets a value indicating whether ClearBeforeFill
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        /// <summary>
        /// The InitAdapter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Ассортимент";
            tableMapping.ColumnMappings.Add("Код товара", "Код товара");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            tableMapping.ColumnMappings.Add("Принадлежность", "Принадлежность");
            tableMapping.ColumnMappings.Add("Цена $/день", "Цена $/день");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `Ассортимент` WHERE ((`Код товара` = ?) AND ((? = 1 AND `Наименование" +
                "` IS NULL) OR (`Наименование` = ?)) AND ((? = 1 AND `Принадлежность` IS NULL) OR" +
                " (`Принадлежность` = ?)) AND ((? = 1 AND `Цена $/день` IS NULL) OR (`Цена $/день" +
                "` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Код_товара", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код товара", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Наименование", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Наименование", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Наименование", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Наименование", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Принадлежность", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Принадлежность", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Принадлежность", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Принадлежность", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Цена_$/день", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Цена $/день", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Цена_$/день", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Цена $/день", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `Ассортимент` (`Наименование`, `Принадлежность`, `Цена $/день`) VALUE" +
                "S (?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Наименование", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Наименование", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Принадлежность", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Принадлежность", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Цена_$/день", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Цена $/день", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `Ассортимент` SET `Наименование` = ?, `Принадлежность` = ?, `Цена $/день` = ? WHERE ((`Код товара` = ?) AND ((? = 1 AND `Наименование` IS NULL) OR (`Наименование` = ?)) AND ((? = 1 AND `Принадлежность` IS NULL) OR (`Принадлежность` = ?)) AND ((? = 1 AND `Цена $/день` IS NULL) OR (`Цена $/день` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Наименование", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Наименование", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Принадлежность", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Принадлежность", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Цена_$/день", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Цена $/день", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Код_товара", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код товара", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Наименование", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Наименование", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Наименование", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Наименование", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Принадлежность", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Принадлежность", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Принадлежность", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Принадлежность", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Цена_$/день", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Цена $/день", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Цена_$/день", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Цена $/день", global::System.Data.DataRowVersion.Original, false, null));
        }

        /// <summary>
        /// The InitConnection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::WindowsFormsApp1.Properties.Settings.Default.MyBabeConnection;
        }

        /// <summary>
        /// The InitCommandCollection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Код товара], Наименование, Принадлежность, [Цена $/день] FROM Ассортимент" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }

        /// <summary>
        /// The Fill
        /// </summary>
        /// <param name="dataTable">The dataTable<see cref="BabyConnectionDataSet.АссортиментDataTable"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BabyConnectionDataSet.АссортиментDataTable dataTable)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        /// <summary>
        /// The GetData
        /// </summary>
        /// <returns>The <see cref="BabyConnectionDataSet.АссортиментDataTable"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BabyConnectionDataSet.АссортиментDataTable GetData()
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BabyConnectionDataSet.АссортиментDataTable dataTable = new BabyConnectionDataSet.АссортиментDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataTable">The dataTable<see cref="BabyConnectionDataSet.АссортиментDataTable"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BabyConnectionDataSet.АссортиментDataTable dataTable)
        {
            return this.Adapter.Update(dataTable);
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataSet">The dataSet<see cref="BabyConnectionDataSet"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BabyConnectionDataSet dataSet)
        {
            return this.Adapter.Update(dataSet, "Ассортимент");
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataRow">The dataRow<see cref="global::System.Data.DataRow"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow)
        {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataRows">The dataRows<see cref="global::System.Data.DataRow[]"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows)
        {
            return this.Adapter.Update(dataRows);
        }

        /// <summary>
        /// The Delete
        /// </summary>
        /// <param name="Original_Код_товара">The Original_Код_товара<see cref="int"/></param>
        /// <param name="Original_Наименование">The Original_Наименование<see cref="string"/></param>
        /// <param name="Original_Принадлежность">The Original_Принадлежность<see cref="string"/></param>
        /// <param name="_Original_Цена___день">The _Original_Цена___день<see cref="global::System.Nullable{int}"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_товара, string Original_Наименование, string Original_Принадлежность, global::System.Nullable<int> _Original_Цена___день)
        {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_товара));
            if ((Original_Наименование == null))
            {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Наименование));
            }
            if ((Original_Принадлежность == null))
            {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Принадлежность));
            }
            if ((_Original_Цена___день.HasValue == true))
            {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(_Original_Цена___день.Value));
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }

        /// <summary>
        /// The Insert
        /// </summary>
        /// <param name="Наименование">The Наименование<see cref="string"/></param>
        /// <param name="Принадлежность">The Принадлежность<see cref="string"/></param>
        /// <param name="_Цена___день">The _Цена___день<see cref="global::System.Nullable{int}"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Наименование, string Принадлежность, global::System.Nullable<int> _Цена___день)
        {
            if ((Наименование == null))
            {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Наименование));
            }
            if ((Принадлежность == null))
            {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Принадлежность));
            }
            if ((_Цена___день.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(_Цена___день.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="Наименование">The Наименование<see cref="string"/></param>
        /// <param name="Принадлежность">The Принадлежность<see cref="string"/></param>
        /// <param name="_Цена___день">The _Цена___день<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Original_Код_товара">The Original_Код_товара<see cref="int"/></param>
        /// <param name="Original_Наименование">The Original_Наименование<see cref="string"/></param>
        /// <param name="Original_Принадлежность">The Original_Принадлежность<see cref="string"/></param>
        /// <param name="_Original_Цена___день">The _Original_Цена___день<see cref="global::System.Nullable{int}"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование, string Принадлежность, global::System.Nullable<int> _Цена___день, int Original_Код_товара, string Original_Наименование, string Original_Принадлежность, global::System.Nullable<int> _Original_Цена___день)
        {
            if ((Наименование == null))
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Наименование));
            }
            if ((Принадлежность == null))
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Принадлежность));
            }
            if ((_Цена___день.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(_Цена___день.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Код_товара));
            if ((Original_Наименование == null))
            {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Наименование));
            }
            if ((Original_Принадлежность == null))
            {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Принадлежность));
            }
            if ((_Original_Цена___день.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(_Original_Цена___день.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }

    /// <summary>
    /// Represents the connection and commands used to retrieve and save data.
    /// </summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ЗаказTableAdapter : global::System.ComponentModel.Component
    {
        /// <summary>
        /// Defines the _adapter
        /// </summary>
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;

        /// <summary>
        /// Defines the _connection
        /// </summary>
        private global::System.Data.OleDb.OleDbConnection _connection;

        /// <summary>
        /// Defines the _transaction
        /// </summary>
        private global::System.Data.OleDb.OleDbTransaction _transaction;

        /// <summary>
        /// Defines the _commandCollection
        /// </summary>
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;

        /// <summary>
        /// Defines the _clearBeforeFill
        /// </summary>
        private bool _clearBeforeFill;

        /// <summary>
        /// Initializes a new instance of the <see cref="ЗаказTableAdapter"/> class.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public ЗаказTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        /// <summary>
        /// Gets the Adapter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        /// <summary>
        /// Gets or sets the Connection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.OleDb.OleDbConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        /// <summary>
        /// Gets or sets the Transaction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.OleDb.OleDbTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        /// <summary>
        /// Gets the CommandCollection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        /// <summary>
        /// Gets or sets a value indicating whether ClearBeforeFill
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        /// <summary>
        /// The InitAdapter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Заказ";
            tableMapping.ColumnMappings.Add("Код", "Код");
            tableMapping.ColumnMappings.Add("Кол-во дней у клиента", "Кол-во дней у клиента");
            tableMapping.ColumnMappings.Add("ФИО клиента", "ФИО клиента");
            tableMapping.ColumnMappings.Add("Код товара", "Код товара");
            tableMapping.ColumnMappings.Add("Итого к оплате", "Итого к оплате");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `Заказ` WHERE ((`Код` = ?) AND ((? = 1 AND `Кол-во дней у клиента` IS NULL) OR (`Кол-во дней у клиента` = ?)) AND ((? = 1 AND `ФИО клиента` IS NULL) OR (`ФИО клиента` = ?)) AND ((? = 1 AND `Код товара` IS NULL) OR (`Код товара` = ?)) AND ((? = 1 AND `Итого к оплате` IS NULL) OR (`Итого к оплате` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Код", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Кол-во_дней_у_клиента", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Кол-во дней у клиента", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Кол-во_дней_у_клиента", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Кол-во дней у клиента", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ФИО_клиента", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФИО клиента", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ФИО_клиента", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФИО клиента", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Код_товара", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код товара", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Код_товара", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код товара", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Итого_к_оплате", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Итого к оплате", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Итого_к_оплате", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Итого к оплате", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `Заказ` (`Кол-во дней у клиента`, `ФИО клиента`, `Код товара`, `Итого" +
                " к оплате`) VALUES (?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Кол-во_дней_у_клиента", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Кол-во дней у клиента", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ФИО_клиента", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФИО клиента", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Код_товара", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код товара", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Итого_к_оплате", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Итого к оплате", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `Заказ` SET `Кол-во дней у клиента` = ?, `ФИО клиента` = ?, `Код товара` = ?, `Итого к оплате` = ? WHERE ((`Код` = ?) AND ((? = 1 AND `Кол-во дней у клиента` IS NULL) OR (`Кол-во дней у клиента` = ?)) AND ((? = 1 AND `ФИО клиента` IS NULL) OR (`ФИО клиента` = ?)) AND ((? = 1 AND `Код товара` IS NULL) OR (`Код товара` = ?)) AND ((? = 1 AND `Итого к оплате` IS NULL) OR (`Итого к оплате` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Кол-во_дней_у_клиента", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Кол-во дней у клиента", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ФИО_клиента", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФИО клиента", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Код_товара", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код товара", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Итого_к_оплате", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Итого к оплате", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Код", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Кол-во_дней_у_клиента", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Кол-во дней у клиента", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Кол-во_дней_у_клиента", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Кол-во дней у клиента", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ФИО_клиента", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФИО клиента", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ФИО_клиента", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФИО клиента", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Код_товара", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код товара", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Код_товара", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код товара", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Итого_к_оплате", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Итого к оплате", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Итого_к_оплате", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Итого к оплате", global::System.Data.DataRowVersion.Original, false, null));
        }

        /// <summary>
        /// The InitConnection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::WindowsFormsApp1.Properties.Settings.Default.MyBabeConnection;
        }

        /// <summary>
        /// The InitCommandCollection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код, [Кол-во дней у клиента], [ФИО клиента], [Код товара], [Итого к оплате" +
                "] FROM Заказ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }

        /// <summary>
        /// The Fill
        /// </summary>
        /// <param name="dataTable">The dataTable<see cref="BabyConnectionDataSet.ЗаказDataTable"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BabyConnectionDataSet.ЗаказDataTable dataTable)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        /// <summary>
        /// The GetData
        /// </summary>
        /// <returns>The <see cref="BabyConnectionDataSet.ЗаказDataTable"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BabyConnectionDataSet.ЗаказDataTable GetData()
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BabyConnectionDataSet.ЗаказDataTable dataTable = new BabyConnectionDataSet.ЗаказDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataTable">The dataTable<see cref="BabyConnectionDataSet.ЗаказDataTable"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BabyConnectionDataSet.ЗаказDataTable dataTable)
        {
            return this.Adapter.Update(dataTable);
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataSet">The dataSet<see cref="BabyConnectionDataSet"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BabyConnectionDataSet dataSet)
        {
            return this.Adapter.Update(dataSet, "Заказ");
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataRow">The dataRow<see cref="global::System.Data.DataRow"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow)
        {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataRows">The dataRows<see cref="global::System.Data.DataRow[]"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows)
        {
            return this.Adapter.Update(dataRows);
        }

        /// <summary>
        /// The Delete
        /// </summary>
        /// <param name="Original_Код">The Original_Код<see cref="int"/></param>
        /// <param name="_Original_Кол_во_дней_у_клиента">The _Original_Кол_во_дней_у_клиента<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Original_ФИО_клиента">The Original_ФИО_клиента<see cref="string"/></param>
        /// <param name="Original_Код_товара">The Original_Код_товара<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Original_Итого_к_оплате">The Original_Итого_к_оплате<see cref="global::System.Nullable{int}"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код, global::System.Nullable<int> _Original_Кол_во_дней_у_клиента, string Original_ФИО_клиента, global::System.Nullable<int> Original_Код_товара, global::System.Nullable<int> Original_Итого_к_оплате)
        {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код));
            if ((_Original_Кол_во_дней_у_клиента.HasValue == true))
            {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(_Original_Кол_во_дней_у_клиента.Value));
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_ФИО_клиента == null))
            {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ФИО_клиента));
            }
            if ((Original_Код_товара.HasValue == true))
            {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Код_товара.Value));
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Итого_к_оплате.HasValue == true))
            {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Итого_к_оплате.Value));
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }

        /// <summary>
        /// The Insert
        /// </summary>
        /// <param name="_Кол_во_дней_у_клиента">The _Кол_во_дней_у_клиента<see cref="global::System.Nullable{int}"/></param>
        /// <param name="ФИО_клиента">The ФИО_клиента<see cref="string"/></param>
        /// <param name="Код_товара">The Код_товара<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Итого_к_оплате">The Итого_к_оплате<see cref="global::System.Nullable{int}"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> _Кол_во_дней_у_клиента, string ФИО_клиента, global::System.Nullable<int> Код_товара, global::System.Nullable<int> Итого_к_оплате)
        {
            if ((_Кол_во_дней_у_клиента.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(_Кол_во_дней_у_клиента.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ФИО_клиента == null))
            {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ФИО_клиента));
            }
            if ((Код_товара.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Код_товара.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Итого_к_оплате.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Итого_к_оплате.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="_Кол_во_дней_у_клиента">The _Кол_во_дней_у_клиента<see cref="global::System.Nullable{int}"/></param>
        /// <param name="ФИО_клиента">The ФИО_клиента<see cref="string"/></param>
        /// <param name="Код_товара">The Код_товара<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Итого_к_оплате">The Итого_к_оплате<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Original_Код">The Original_Код<see cref="int"/></param>
        /// <param name="_Original_Кол_во_дней_у_клиента">The _Original_Кол_во_дней_у_клиента<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Original_ФИО_клиента">The Original_ФИО_клиента<see cref="string"/></param>
        /// <param name="Original_Код_товара">The Original_Код_товара<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Original_Итого_к_оплате">The Original_Итого_к_оплате<see cref="global::System.Nullable{int}"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> _Кол_во_дней_у_клиента, string ФИО_клиента, global::System.Nullable<int> Код_товара, global::System.Nullable<int> Итого_к_оплате, int Original_Код, global::System.Nullable<int> _Original_Кол_во_дней_у_клиента, string Original_ФИО_клиента, global::System.Nullable<int> Original_Код_товара, global::System.Nullable<int> Original_Итого_к_оплате)
        {
            if ((_Кол_во_дней_у_клиента.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(_Кол_во_дней_у_клиента.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ФИО_клиента == null))
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ФИО_клиента));
            }
            if ((Код_товара.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Код_товара.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Итого_к_оплате.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Итого_к_оплате.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Код));
            if ((_Original_Кол_во_дней_у_клиента.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(_Original_Кол_во_дней_у_клиента.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_ФИО_клиента == null))
            {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_ФИО_клиента));
            }
            if ((Original_Код_товара.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Код_товара.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Итого_к_оплате.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Итого_к_оплате.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }

    /// <summary>
    /// Represents the connection and commands used to retrieve and save data.
    /// </summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class СотрудникиTableAdapter : global::System.ComponentModel.Component
    {
        /// <summary>
        /// Defines the _adapter
        /// </summary>
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;

        /// <summary>
        /// Defines the _connection
        /// </summary>
        private global::System.Data.OleDb.OleDbConnection _connection;

        /// <summary>
        /// Defines the _transaction
        /// </summary>
        private global::System.Data.OleDb.OleDbTransaction _transaction;

        /// <summary>
        /// Defines the _commandCollection
        /// </summary>
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;

        /// <summary>
        /// Defines the _clearBeforeFill
        /// </summary>
        private bool _clearBeforeFill;

        /// <summary>
        /// Initializes a new instance of the <see cref="СотрудникиTableAdapter"/> class.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public СотрудникиTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        /// <summary>
        /// Gets the Adapter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        /// <summary>
        /// Gets or sets the Connection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.OleDb.OleDbConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        /// <summary>
        /// Gets or sets the Transaction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.OleDb.OleDbTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        /// <summary>
        /// Gets the CommandCollection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        /// <summary>
        /// Gets or sets a value indicating whether ClearBeforeFill
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        /// <summary>
        /// The InitAdapter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Сотрудники";
            tableMapping.ColumnMappings.Add("Код сотрудника", "Код сотрудника");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("ЗП ($)", "ЗП ($)");
            tableMapping.ColumnMappings.Add("Должность", "Должность");
            tableMapping.ColumnMappings.Add("Часов в неделю", "Часов в неделю");
            tableMapping.ColumnMappings.Add("Филиал", "Филиал");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `Сотрудники` WHERE ((`Код сотрудника` = ?) AND ((? = 1 AND `ФИО` IS NULL) OR (`ФИО` = ?)) AND ((? = 1 AND `ЗП ($)` IS NULL) OR (`ЗП ($)` = ?)) AND ((? = 1 AND `Должность` IS NULL) OR (`Должность` = ?)) AND ((? = 1 AND `Часов в неделю` IS NULL) OR (`Часов в неделю` = ?)) AND ((? = 1 AND `Филиал` IS NULL) OR (`Филиал` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Код_сотрудника", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код сотрудника", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ФИО", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФИО", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ФИО", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФИО", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ЗП_($)", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЗП ($)", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ЗП_($)", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЗП ($)", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Должность", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Должность", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Должность", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Должность", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Часов_в_неделю", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Часов в неделю", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Часов_в_неделю", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Часов в неделю", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Филиал", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Филиал", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Филиал", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Филиал", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `Сотрудники` (`ФИО`, `ЗП ($)`, `Должность`, `Часов в неделю`, `Филиал" +
                "`) VALUES (?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ФИО", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФИО", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ЗП_($)", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЗП ($)", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Должность", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Должность", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Часов_в_неделю", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Часов в неделю", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Филиал", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Филиал", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `Сотрудники` SET `ФИО` = ?, `ЗП ($)` = ?, `Должность` = ?, `Часов в неделю` = ?, `Филиал` = ? WHERE ((`Код сотрудника` = ?) AND ((? = 1 AND `ФИО` IS NULL) OR (`ФИО` = ?)) AND ((? = 1 AND `ЗП ($)` IS NULL) OR (`ЗП ($)` = ?)) AND ((? = 1 AND `Должность` IS NULL) OR (`Должность` = ?)) AND ((? = 1 AND `Часов в неделю` IS NULL) OR (`Часов в неделю` = ?)) AND ((? = 1 AND `Филиал` IS NULL) OR (`Филиал` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ФИО", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФИО", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ЗП_($)", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЗП ($)", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Должность", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Должность", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Часов_в_неделю", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Часов в неделю", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Филиал", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Филиал", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Код_сотрудника", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код сотрудника", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ФИО", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФИО", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ФИО", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФИО", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ЗП_($)", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЗП ($)", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ЗП_($)", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЗП ($)", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Должность", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Должность", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Должность", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Должность", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Часов_в_неделю", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Часов в неделю", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Часов_в_неделю", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Часов в неделю", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Филиал", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Филиал", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Филиал", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Филиал", global::System.Data.DataRowVersion.Original, false, null));
        }

        /// <summary>
        /// The InitConnection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::WindowsFormsApp1.Properties.Settings.Default.MyBabeConnection;
        }

        /// <summary>
        /// The InitCommandCollection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Код сотрудника], ФИО, [ЗП ($)], Должность, [Часов в неделю], Филиал FROM " +
                "Сотрудники";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }

        /// <summary>
        /// The Fill
        /// </summary>
        /// <param name="dataTable">The dataTable<see cref="BabyConnectionDataSet.СотрудникиDataTable"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BabyConnectionDataSet.СотрудникиDataTable dataTable)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        /// <summary>
        /// The GetData
        /// </summary>
        /// <returns>The <see cref="BabyConnectionDataSet.СотрудникиDataTable"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BabyConnectionDataSet.СотрудникиDataTable GetData()
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BabyConnectionDataSet.СотрудникиDataTable dataTable = new BabyConnectionDataSet.СотрудникиDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataTable">The dataTable<see cref="BabyConnectionDataSet.СотрудникиDataTable"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BabyConnectionDataSet.СотрудникиDataTable dataTable)
        {
            return this.Adapter.Update(dataTable);
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataSet">The dataSet<see cref="BabyConnectionDataSet"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BabyConnectionDataSet dataSet)
        {
            return this.Adapter.Update(dataSet, "Сотрудники");
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataRow">The dataRow<see cref="global::System.Data.DataRow"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow)
        {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataRows">The dataRows<see cref="global::System.Data.DataRow[]"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows)
        {
            return this.Adapter.Update(dataRows);
        }

        /// <summary>
        /// The Delete
        /// </summary>
        /// <param name="Original_Код_сотрудника">The Original_Код_сотрудника<see cref="int"/></param>
        /// <param name="Original_ФИО">The Original_ФИО<see cref="string"/></param>
        /// <param name="_Original_ЗП____">The _Original_ЗП____<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Original_Должность">The Original_Должность<see cref="string"/></param>
        /// <param name="Original_Часов_в_неделю">The Original_Часов_в_неделю<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Original_Филиал">The Original_Филиал<see cref="string"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_сотрудника, string Original_ФИО, global::System.Nullable<int> _Original_ЗП____, string Original_Должность, global::System.Nullable<int> Original_Часов_в_неделю, string Original_Филиал)
        {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_сотрудника));
            if ((Original_ФИО == null))
            {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ФИО));
            }
            if ((_Original_ЗП____.HasValue == true))
            {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(_Original_ЗП____.Value));
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Должность == null))
            {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Должность));
            }
            if ((Original_Часов_в_неделю.HasValue == true))
            {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Часов_в_неделю.Value));
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Филиал == null))
            {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Филиал));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }

        /// <summary>
        /// The Insert
        /// </summary>
        /// <param name="ФИО">The ФИО<see cref="string"/></param>
        /// <param name="_ЗП____">The _ЗП____<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Должность">The Должность<see cref="string"/></param>
        /// <param name="Часов_в_неделю">The Часов_в_неделю<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Филиал">The Филиал<see cref="string"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ФИО, global::System.Nullable<int> _ЗП____, string Должность, global::System.Nullable<int> Часов_в_неделю, string Филиал)
        {
            if ((ФИО == null))
            {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ФИО));
            }
            if ((_ЗП____.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(_ЗП____.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Должность == null))
            {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Должность));
            }
            if ((Часов_в_неделю.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Часов_в_неделю.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Филиал == null))
            {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Филиал));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="ФИО">The ФИО<see cref="string"/></param>
        /// <param name="_ЗП____">The _ЗП____<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Должность">The Должность<see cref="string"/></param>
        /// <param name="Часов_в_неделю">The Часов_в_неделю<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Филиал">The Филиал<see cref="string"/></param>
        /// <param name="Original_Код_сотрудника">The Original_Код_сотрудника<see cref="int"/></param>
        /// <param name="Original_ФИО">The Original_ФИО<see cref="string"/></param>
        /// <param name="_Original_ЗП____">The _Original_ЗП____<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Original_Должность">The Original_Должность<see cref="string"/></param>
        /// <param name="Original_Часов_в_неделю">The Original_Часов_в_неделю<see cref="global::System.Nullable{int}"/></param>
        /// <param name="Original_Филиал">The Original_Филиал<see cref="string"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ФИО, global::System.Nullable<int> _ЗП____, string Должность, global::System.Nullable<int> Часов_в_неделю, string Филиал, int Original_Код_сотрудника, string Original_ФИО, global::System.Nullable<int> _Original_ЗП____, string Original_Должность, global::System.Nullable<int> Original_Часов_в_неделю, string Original_Филиал)
        {
            if ((ФИО == null))
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ФИО));
            }
            if ((_ЗП____.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(_ЗП____.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Должность == null))
            {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Должность));
            }
            if ((Часов_в_неделю.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Часов_в_неделю.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Филиал == null))
            {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Филиал));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Код_сотрудника));
            if ((Original_ФИО == null))
            {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_ФИО));
            }
            if ((_Original_ЗП____.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(_Original_ЗП____.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Должность == null))
            {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Должность));
            }
            if ((Original_Часов_в_неделю.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_Часов_в_неделю.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Филиал == null))
            {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Филиал));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }

    /// <summary>
    /// Represents the connection and commands used to retrieve and save data.
    /// </summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ФилиалыTableAdapter : global::System.ComponentModel.Component
    {
        /// <summary>
        /// Defines the _adapter
        /// </summary>
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;

        /// <summary>
        /// Defines the _connection
        /// </summary>
        private global::System.Data.OleDb.OleDbConnection _connection;

        /// <summary>
        /// Defines the _transaction
        /// </summary>
        private global::System.Data.OleDb.OleDbTransaction _transaction;

        /// <summary>
        /// Defines the _commandCollection
        /// </summary>
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;

        /// <summary>
        /// Defines the _clearBeforeFill
        /// </summary>
        private bool _clearBeforeFill;

        /// <summary>
        /// Initializes a new instance of the <see cref="ФилиалыTableAdapter"/> class.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public ФилиалыTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        /// <summary>
        /// Gets the Adapter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        /// <summary>
        /// Gets or sets the Connection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.OleDb.OleDbConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        /// <summary>
        /// Gets or sets the Transaction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.OleDb.OleDbTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        /// <summary>
        /// Gets the CommandCollection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        /// <summary>
        /// Gets or sets a value indicating whether ClearBeforeFill
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        /// <summary>
        /// The InitAdapter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Филиалы";
            tableMapping.ColumnMappings.Add("Код филиала", "Код филиала");
            tableMapping.ColumnMappings.Add("Филиал", "Филиал");
            tableMapping.ColumnMappings.Add("Руководитель", "Руководитель");
            tableMapping.ColumnMappings.Add("Основное направление", "Основное направление");
            tableMapping.ColumnMappings.Add("Расположение", "Расположение");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `Филиалы` WHERE (((? = 1 AND `Код филиала` IS NULL) OR (`Код филиала` = ?)) AND (`Филиал` = ?) AND ((? = 1 AND `Руководитель` IS NULL) OR (`Руководитель` = ?)) AND ((? = 1 AND `Основное направление` IS NULL) OR (`Основное направление` = ?)) AND ((? = 1 AND `Расположение` IS NULL) OR (`Расположение` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Код_филиала", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код филиала", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Код_филиала", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код филиала", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Филиал", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Филиал", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Руководитель", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Руководитель", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Руководитель", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Руководитель", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Основное_направление", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Основное направление", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Основное_направление", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Основное направление", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Расположение", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Расположение", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Расположение", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Расположение", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `Филиалы` (`Филиал`, `Руководитель`, `Основное направление`, `Располо" +
                "жение`) VALUES (?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Филиал", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Филиал", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Руководитель", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Руководитель", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Основное_направление", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Основное направление", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Расположение", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Расположение", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `Филиалы` SET `Филиал` = ?, `Руководитель` = ?, `Основное направление` = ?, `Расположение` = ? WHERE (((? = 1 AND `Код филиала` IS NULL) OR (`Код филиала` = ?)) AND (`Филиал` = ?) AND ((? = 1 AND `Руководитель` IS NULL) OR (`Руководитель` = ?)) AND ((? = 1 AND `Основное направление` IS NULL) OR (`Основное направление` = ?)) AND ((? = 1 AND `Расположение` IS NULL) OR (`Расположение` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Филиал", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Филиал", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Руководитель", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Руководитель", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Основное_направление", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Основное направление", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Расположение", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Расположение", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Код_филиала", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код филиала", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Код_филиала", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Код филиала", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Филиал", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Филиал", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Руководитель", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Руководитель", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Руководитель", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Руководитель", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Основное_направление", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Основное направление", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Основное_направление", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Основное направление", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Расположение", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Расположение", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Расположение", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Расположение", global::System.Data.DataRowVersion.Original, false, null));
        }

        /// <summary>
        /// The InitConnection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::WindowsFormsApp1.Properties.Settings.Default.MyBabeConnection;
        }

        /// <summary>
        /// The InitCommandCollection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Код филиала], Филиал, Руководитель, [Основное направление], Расположение " +
                "FROM Филиалы";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }

        /// <summary>
        /// The Fill
        /// </summary>
        /// <param name="dataTable">The dataTable<see cref="BabyConnectionDataSet.ФилиалыDataTable"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BabyConnectionDataSet.ФилиалыDataTable dataTable)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        /// <summary>
        /// The GetData
        /// </summary>
        /// <returns>The <see cref="BabyConnectionDataSet.ФилиалыDataTable"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BabyConnectionDataSet.ФилиалыDataTable GetData()
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BabyConnectionDataSet.ФилиалыDataTable dataTable = new BabyConnectionDataSet.ФилиалыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataTable">The dataTable<see cref="BabyConnectionDataSet.ФилиалыDataTable"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BabyConnectionDataSet.ФилиалыDataTable dataTable)
        {
            return this.Adapter.Update(dataTable);
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataSet">The dataSet<see cref="BabyConnectionDataSet"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BabyConnectionDataSet dataSet)
        {
            return this.Adapter.Update(dataSet, "Филиалы");
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataRow">The dataRow<see cref="global::System.Data.DataRow"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow)
        {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="dataRows">The dataRows<see cref="global::System.Data.DataRow[]"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows)
        {
            return this.Adapter.Update(dataRows);
        }

        /// <summary>
        /// The Delete
        /// </summary>
        /// <param name="Original_Код_филиала">The Original_Код_филиала<see cref="int"/></param>
        /// <param name="Original_Филиал">The Original_Филиал<see cref="string"/></param>
        /// <param name="Original_Руководитель">The Original_Руководитель<see cref="string"/></param>
        /// <param name="Original_Основное_направление">The Original_Основное_направление<see cref="string"/></param>
        /// <param name="Original_Расположение">The Original_Расположение<see cref="string"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_филиала, string Original_Филиал, string Original_Руководитель, string Original_Основное_направление, string Original_Расположение)
        {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Код_филиала));
            if ((Original_Филиал == null))
            {
                throw new global::System.ArgumentNullException("Original_Филиал");
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Филиал));
            }
            if ((Original_Руководитель == null))
            {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Руководитель));
            }
            if ((Original_Основное_направление == null))
            {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Основное_направление));
            }
            if ((Original_Расположение == null))
            {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Расположение));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }

        /// <summary>
        /// The Insert
        /// </summary>
        /// <param name="Филиал">The Филиал<see cref="string"/></param>
        /// <param name="Руководитель">The Руководитель<see cref="string"/></param>
        /// <param name="Основное_направление">The Основное_направление<see cref="string"/></param>
        /// <param name="Расположение">The Расположение<see cref="string"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Филиал, string Руководитель, string Основное_направление, string Расположение)
        {
            if ((Филиал == null))
            {
                throw new global::System.ArgumentNullException("Филиал");
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Филиал));
            }
            if ((Руководитель == null))
            {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Руководитель));
            }
            if ((Основное_направление == null))
            {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Основное_направление));
            }
            if ((Расположение == null))
            {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Расположение));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="Филиал">The Филиал<see cref="string"/></param>
        /// <param name="Руководитель">The Руководитель<see cref="string"/></param>
        /// <param name="Основное_направление">The Основное_направление<see cref="string"/></param>
        /// <param name="Расположение">The Расположение<see cref="string"/></param>
        /// <param name="Original_Код_филиала">The Original_Код_филиала<see cref="int"/></param>
        /// <param name="Original_Филиал">The Original_Филиал<see cref="string"/></param>
        /// <param name="Original_Руководитель">The Original_Руководитель<see cref="string"/></param>
        /// <param name="Original_Основное_направление">The Original_Основное_направление<see cref="string"/></param>
        /// <param name="Original_Расположение">The Original_Расположение<see cref="string"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Филиал, string Руководитель, string Основное_направление, string Расположение, int Original_Код_филиала, string Original_Филиал, string Original_Руководитель, string Original_Основное_направление, string Original_Расположение)
        {
            if ((Филиал == null))
            {
                throw new global::System.ArgumentNullException("Филиал");
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Филиал));
            }
            if ((Руководитель == null))
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Руководитель));
            }
            if ((Основное_направление == null))
            {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Основное_направление));
            }
            if ((Расположение == null))
            {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Расположение));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Код_филиала));
            if ((Original_Филиал == null))
            {
                throw new global::System.ArgumentNullException("Original_Филиал");
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Филиал));
            }
            if ((Original_Руководитель == null))
            {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Руководитель));
            }
            if ((Original_Основное_направление == null))
            {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Основное_направление));
            }
            if ((Original_Расположение == null))
            {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Расположение));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }

        /// <summary>
        /// The Update
        /// </summary>
        /// <param name="Руководитель">The Руководитель<see cref="string"/></param>
        /// <param name="Основное_направление">The Основное_направление<see cref="string"/></param>
        /// <param name="Расположение">The Расположение<see cref="string"/></param>
        /// <param name="Original_Код_филиала">The Original_Код_филиала<see cref="int"/></param>
        /// <param name="Original_Филиал">The Original_Филиал<see cref="string"/></param>
        /// <param name="Original_Руководитель">The Original_Руководитель<see cref="string"/></param>
        /// <param name="Original_Основное_направление">The Original_Основное_направление<see cref="string"/></param>
        /// <param name="Original_Расположение">The Original_Расположение<see cref="string"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Руководитель, string Основное_направление, string Расположение, int Original_Код_филиала, string Original_Филиал, string Original_Руководитель, string Original_Основное_направление, string Original_Расположение)
        {
            return this.Update(Original_Филиал, Руководитель, Основное_направление, Расположение, Original_Код_филиала, Original_Филиал, Original_Руководитель, Original_Основное_направление, Original_Расположение);
        }
    }

    /// <summary>
    /// TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    /// </summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component
    {
        /// <summary>
        /// Defines the _updateOrder
        /// </summary>
        private UpdateOrderOption _updateOrder;

        /// <summary>
        /// Defines the _ассортиментTableAdapter
        /// </summary>
        private АссортиментTableAdapter _ассортиментTableAdapter;

        /// <summary>
        /// Defines the _заказTableAdapter
        /// </summary>
        private ЗаказTableAdapter _заказTableAdapter;

        /// <summary>
        /// Defines the _сотрудникиTableAdapter
        /// </summary>
        private СотрудникиTableAdapter _сотрудникиTableAdapter;

        /// <summary>
        /// Defines the _филиалыTableAdapter
        /// </summary>
        private ФилиалыTableAdapter _филиалыTableAdapter;

        /// <summary>
        /// Defines the _backupDataSetBeforeUpdate
        /// </summary>
        private bool _backupDataSetBeforeUpdate;

        /// <summary>
        /// Defines the _connection
        /// </summary>
        private global::System.Data.IDbConnection _connection;

        /// <summary>
        /// Gets or sets the UpdateOrder
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder
        {
            get
            {
                return this._updateOrder;
            }
            set
            {
                this._updateOrder = value;
            }
        }

        /// <summary>
        /// Gets or sets the АссортиментTableAdapter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public АссортиментTableAdapter АссортиментTableAdapter
        {
            get
            {
                return this._ассортиментTableAdapter;
            }
            set
            {
                this._ассортиментTableAdapter = value;
            }
        }

        /// <summary>
        /// Gets or sets the ЗаказTableAdapter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ЗаказTableAdapter ЗаказTableAdapter
        {
            get
            {
                return this._заказTableAdapter;
            }
            set
            {
                this._заказTableAdapter = value;
            }
        }

        /// <summary>
        /// Gets or sets the СотрудникиTableAdapter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public СотрудникиTableAdapter СотрудникиTableAdapter
        {
            get
            {
                return this._сотрудникиTableAdapter;
            }
            set
            {
                this._сотрудникиTableAdapter = value;
            }
        }

        /// <summary>
        /// Gets or sets the ФилиалыTableAdapter
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ФилиалыTableAdapter ФилиалыTableAdapter
        {
            get
            {
                return this._филиалыTableAdapter;
            }
            set
            {
                this._филиалыTableAdapter = value;
            }
        }

        /// <summary>
        /// Gets or sets a value indicating whether BackupDataSetBeforeUpdate
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate
        {
            get
            {
                return this._backupDataSetBeforeUpdate;
            }
            set
            {
                this._backupDataSetBeforeUpdate = value;
            }
        }

        /// <summary>
        /// Gets or sets the Connection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection
        {
            get
            {
                if ((this._connection != null))
                {
                    return this._connection;
                }
                if (((this._ассортиментTableAdapter != null)
                            && (this._ассортиментTableAdapter.Connection != null)))
                {
                    return this._ассортиментTableAdapter.Connection;
                }
                if (((this._заказTableAdapter != null)
                            && (this._заказTableAdapter.Connection != null)))
                {
                    return this._заказTableAdapter.Connection;
                }
                if (((this._сотрудникиTableAdapter != null)
                            && (this._сотрудникиTableAdapter.Connection != null)))
                {
                    return this._сотрудникиTableAdapter.Connection;
                }
                if (((this._филиалыTableAdapter != null)
                            && (this._филиалыTableAdapter.Connection != null)))
                {
                    return this._филиалыTableAdapter.Connection;
                }
                return null;
            }
            set
            {
                this._connection = value;
            }
        }

        /// <summary>
        /// Gets the TableAdapterInstanceCount
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount
        {
            get
            {
                int count = 0;
                if ((this._ассортиментTableAdapter != null))
                {
                    count = (count + 1);
                }
                if ((this._заказTableAdapter != null))
                {
                    count = (count + 1);
                }
                if ((this._сотрудникиTableAdapter != null))
                {
                    count = (count + 1);
                }
                if ((this._филиалыTableAdapter != null))
                {
                    count = (count + 1);
                }
                return count;
            }
        }

        /// <summary>
        /// Update rows in top-down order.
        /// </summary>
        /// <param name="dataSet">The dataSet<see cref="BabyConnectionDataSet"/></param>
        /// <param name="allChangedRows">The allChangedRows<see cref="global::System.Collections.Generic.List{global::System.Data.DataRow}"/></param>
        /// <param name="allAddedRows">The allAddedRows<see cref="global::System.Collections.Generic.List{global::System.Data.DataRow}"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(BabyConnectionDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
        {
            int result = 0;
            if ((this._филиалыTableAdapter != null))
            {
                global::System.Data.DataRow[] updatedRows = dataSet.Филиалы.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null)
                            && (0 < updatedRows.Length)))
                {
                    result = (result + this._филиалыTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._ассортиментTableAdapter != null))
            {
                global::System.Data.DataRow[] updatedRows = dataSet.Ассортимент.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null)
                            && (0 < updatedRows.Length)))
                {
                    result = (result + this._ассортиментTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._заказTableAdapter != null))
            {
                global::System.Data.DataRow[] updatedRows = dataSet.Заказ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null)
                            && (0 < updatedRows.Length)))
                {
                    result = (result + this._заказTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._сотрудникиTableAdapter != null))
            {
                global::System.Data.DataRow[] updatedRows = dataSet.Сотрудники.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null)
                            && (0 < updatedRows.Length)))
                {
                    result = (result + this._сотрудникиTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }

        /// <summary>
        /// Insert rows in top-down order.
        /// </summary>
        /// <param name="dataSet">The dataSet<see cref="BabyConnectionDataSet"/></param>
        /// <param name="allAddedRows">The allAddedRows<see cref="global::System.Collections.Generic.List{global::System.Data.DataRow}"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(BabyConnectionDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
        {
            int result = 0;
            if ((this._филиалыTableAdapter != null))
            {
                global::System.Data.DataRow[] addedRows = dataSet.Филиалы.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null)
                            && (0 < addedRows.Length)))
                {
                    result = (result + this._филиалыTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._ассортиментTableAdapter != null))
            {
                global::System.Data.DataRow[] addedRows = dataSet.Ассортимент.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null)
                            && (0 < addedRows.Length)))
                {
                    result = (result + this._ассортиментTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._заказTableAdapter != null))
            {
                global::System.Data.DataRow[] addedRows = dataSet.Заказ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null)
                            && (0 < addedRows.Length)))
                {
                    result = (result + this._заказTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._сотрудникиTableAdapter != null))
            {
                global::System.Data.DataRow[] addedRows = dataSet.Сотрудники.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null)
                            && (0 < addedRows.Length)))
                {
                    result = (result + this._сотрудникиTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }

        /// <summary>
        /// Delete rows in bottom-up order.
        /// </summary>
        /// <param name="dataSet">The dataSet<see cref="BabyConnectionDataSet"/></param>
        /// <param name="allChangedRows">The allChangedRows<see cref="global::System.Collections.Generic.List{global::System.Data.DataRow}"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(BabyConnectionDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows)
        {
            int result = 0;
            if ((this._сотрудникиTableAdapter != null))
            {
                global::System.Data.DataRow[] deletedRows = dataSet.Сотрудники.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null)
                            && (0 < deletedRows.Length)))
                {
                    result = (result + this._сотрудникиTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._заказTableAdapter != null))
            {
                global::System.Data.DataRow[] deletedRows = dataSet.Заказ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null)
                            && (0 < deletedRows.Length)))
                {
                    result = (result + this._заказTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._ассортиментTableAdapter != null))
            {
                global::System.Data.DataRow[] deletedRows = dataSet.Ассортимент.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null)
                            && (0 < deletedRows.Length)))
                {
                    result = (result + this._ассортиментTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._филиалыTableAdapter != null))
            {
                global::System.Data.DataRow[] deletedRows = dataSet.Филиалы.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null)
                            && (0 < deletedRows.Length)))
                {
                    result = (result + this._филиалыTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }

        /// <summary>
        /// Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        /// </summary>
        /// <param name="updatedRows">The updatedRows<see cref="global::System.Data.DataRow[]"/></param>
        /// <param name="allAddedRows">The allAddedRows<see cref="global::System.Collections.Generic.List{global::System.Data.DataRow}"/></param>
        /// <returns>The <see cref="global::System.Data.DataRow[]"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
        {
            if (((updatedRows == null)
                        || (updatedRows.Length < 1)))
            {
                return updatedRows;
            }
            if (((allAddedRows == null)
                        || (allAddedRows.Count < 1)))
            {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1))
            {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false))
                {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }

        /// <summary>
        /// Update all changes to the dataset.
        /// </summary>
        /// <param name="dataSet">The dataSet<see cref="BabyConnectionDataSet"/></param>
        /// <returns>The <see cref="int"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(BabyConnectionDataSet dataSet)
        {
            if ((dataSet == null))
            {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false))
            {
                return 0;
            }
            if (((this._ассортиментTableAdapter != null)
                        && (this.MatchTableAdapterConnection(this._ассортиментTableAdapter.Connection) == false)))
            {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._заказTableAdapter != null)
                        && (this.MatchTableAdapterConnection(this._заказTableAdapter.Connection) == false)))
            {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._сотрудникиTableAdapter != null)
                        && (this.MatchTableAdapterConnection(this._сотрудникиTableAdapter.Connection) == false)))
            {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._филиалыTableAdapter != null)
                        && (this.MatchTableAdapterConnection(this._филиалыTableAdapter.Connection) == false)))
            {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null))
            {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken)
                        == global::System.Data.ConnectionState.Broken))
            {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed))
            {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null))
            {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate)
            {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try
            {
                // ---- Prepare for update -----------
                //
                if ((this._ассортиментTableAdapter != null))
                {
                    revertConnections.Add(this._ассортиментTableAdapter, this._ассортиментTableAdapter.Connection);
                    this._ассортиментTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._ассортиментTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._ассортиментTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._ассортиментTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ассортиментTableAdapter.Adapter);
                    }
                }
                if ((this._заказTableAdapter != null))
                {
                    revertConnections.Add(this._заказTableAdapter, this._заказTableAdapter.Connection);
                    this._заказTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._заказTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._заказTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._заказTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._заказTableAdapter.Adapter);
                    }
                }
                if ((this._сотрудникиTableAdapter != null))
                {
                    revertConnections.Add(this._сотрудникиTableAdapter, this._сотрудникиTableAdapter.Connection);
                    this._сотрудникиTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._сотрудникиTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._сотрудникиTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._сотрудникиTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._сотрудникиTableAdapter.Adapter);
                    }
                }
                if ((this._филиалыTableAdapter != null))
                {
                    revertConnections.Add(this._филиалыTableAdapter, this._филиалыTableAdapter.Connection);
                    this._филиалыTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._филиалыTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._филиалыTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._филиалыTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._филиалыTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete))
                {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else
                {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count))
                {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1))
                    {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count))
                {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1))
                    {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex)
            {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate)
                {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else
                {
                    if ((0 < allAddedRows.Count))
                    {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1))
                        {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally
            {
                if (workConnOpened)
                {
                    workConnection.Close();
                }
                if ((this._ассортиментTableAdapter != null))
                {
                    this._ассортиментTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._ассортиментTableAdapter]));
                    this._ассортиментTableAdapter.Transaction = null;
                }
                if ((this._заказTableAdapter != null))
                {
                    this._заказTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._заказTableAdapter]));
                    this._заказTableAdapter.Transaction = null;
                }
                if ((this._сотрудникиTableAdapter != null))
                {
                    this._сотрудникиTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._сотрудникиTableAdapter]));
                    this._сотрудникиTableAdapter.Transaction = null;
                }
                if ((this._филиалыTableAdapter != null))
                {
                    this._филиалыTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._филиалыTableAdapter]));
                    this._филиалыTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count))
                {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1))
                    {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }

        /// <summary>
        /// The SortSelfReferenceRows
        /// </summary>
        /// <param name="rows">The rows<see cref="global::System.Data.DataRow[]"/></param>
        /// <param name="relation">The relation<see cref="global::System.Data.DataRelation"/></param>
        /// <param name="childFirst">The childFirst<see cref="bool"/></param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst)
        {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }

        /// <summary>
        /// The MatchTableAdapterConnection
        /// </summary>
        /// <param name="inputConnection">The inputConnection<see cref="global::System.Data.IDbConnection"/></param>
        /// <returns>The <see cref="bool"/></returns>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection)
        {
            if ((this._connection != null))
            {
                return true;
            }
            if (((this.Connection == null)
                        || (inputConnection == null)))
            {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal))
            {
                return true;
            }
            return false;
        }

        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption
        {
            /// <summary>
            /// Defines the InsertUpdateDelete
            /// </summary>
            InsertUpdateDelete = 0,
            /// <summary>
            /// Defines the UpdateInsertDelete
            /// </summary>
            UpdateInsertDelete = 1,
        }

        /// <summary>
        /// Used to sort self-referenced table's rows
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow>
        {
            /// <summary>
            /// Defines the _relation
            /// </summary>
            private global::System.Data.DataRelation _relation;

            /// <summary>
            /// Defines the _childFirst
            /// </summary>
            private int _childFirst;

            /// <summary>
            /// Initializes a new instance of the <see cref="SelfReferenceComparer"/> class.
            /// </summary>
            /// <param name="relation">The relation<see cref="global::System.Data.DataRelation"/></param>
            /// <param name="childFirst">The childFirst<see cref="bool"/></param>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst)
            {
                this._relation = relation;
                if (childFirst)
                {
                    this._childFirst = -1;
                }
                else
                {
                    this._childFirst = 1;
                }
            }

            /// <summary>
            /// The GetRoot
            /// </summary>
            /// <param name="row">The row<see cref="global::System.Data.DataRow"/></param>
            /// <param name="distance">The distance<see cref="int"/></param>
            /// <returns>The <see cref="global::System.Data.DataRow"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance)
            {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null)
                            && (traversedRows.ContainsKey(parent) == false));
                )
                {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0))
                {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null)
                                && (traversedRows.ContainsKey(parent) == false));
                    )
                    {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }

            /// <summary>
            /// The Compare
            /// </summary>
            /// <param name="row1">The row1<see cref="global::System.Data.DataRow"/></param>
            /// <param name="row2">The row2<see cref="global::System.Data.DataRow"/></param>
            /// <returns>The <see cref="int"/></returns>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2)
            {
                if (object.ReferenceEquals(row1, row2))
                {
                    return 0;
                }
                if ((row1 == null))
                {
                    return -1;
                }
                if ((row2 == null))
                {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2))
                {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else
                {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null)
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)))
                    {
                        return -1;
                    }
                    else
                    {
                        return 1;
                    }
                }
            }
        }
    }
}
#pragma warning restore 1591